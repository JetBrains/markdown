Markdown:MARKDOWN_FILE
  Markdown:PARAGRAPH
    Markdown:TEXT('#apache')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:IMAGE
          Markdown:!('!')
          Markdown:INLINE_LINK
            Markdown:LINK_TEXT
              Markdown:[('[')
              Markdown:TEXT('Build Status')
              Markdown:](']')
            Markdown:(('(')
            Markdown:LINK_DESTINATION
              Markdown:TEXT('https')
              Markdown::(':')
              Markdown:TEXT('//travis-ci.org/puppetlabs/puppetlabs-apache.png?branch=master')
            Markdown:)(')')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//travis-ci.org/puppetlabs/puppetlabs-apache')
      Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Table of Contents')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('1. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Overview')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('What is the apache module?')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#overview')
          Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('2. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Module Description')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('What does the module do?')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#module-description')
          Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('3. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Setup')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('The basics of getting started with apache')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#setup')
          Markdown:)(')')
      Markdown:EOL('\n')
      WHITE_SPACE('   ')
      Markdown:UNORDERED_LIST
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Beginning with apache')
                WHITE_SPACE(' ')
                Markdown:TEXT('-')
                WHITE_SPACE(' ')
                Markdown:TEXT('Installation')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#beginning-with-apache')
              Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Configure a virtual host')
                WHITE_SPACE(' ')
                Markdown:TEXT('-')
                WHITE_SPACE(' ')
                Markdown:TEXT('Basic options for getting started')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#configure-a-virtual-host')
              Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('4. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Usage')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('The classes and defined types available for configuration')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#usage')
          Markdown:)(')')
      Markdown:EOL('\n')
      WHITE_SPACE('   ')
      Markdown:UNORDERED_LIST
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Classes and Defined Types')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#classes-and-defined-types')
              Markdown:)(')')
          Markdown:EOL('\n')
          WHITE_SPACE('      ')
          Markdown:UNORDERED_LIST
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apache')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('default_mods')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apachedefault_mods')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Defined Type')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#defined-type-apachemod')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Classes')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:EMPH('*')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#classes-apachemodname')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('pagespeed')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apachemodpagespeed')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('php')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apachemodphp')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('ssl')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apachemodssl')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Class')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('mod')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('wsgi')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#class-apachemodwsgi')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Defined Type')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('vhost')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#defined-type-apachevhost')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Parameter')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:CODE_SPAN
                      Markdown:BACKTICK('`')
                      Markdown:TEXT('directories')
                      Markdown:BACKTICK('`')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('for apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('vhost')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#parameter-directories-for-apachevhost')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('SSL parameters for apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('vhost')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#ssl-parameters-for-apachevhost')
                  Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Virtual Host Examples')
                WHITE_SPACE(' ')
                Markdown:TEXT('-')
                WHITE_SPACE(' ')
                Markdown:TEXT('Demonstrations of some configuration options')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#virtual-host-examples')
              Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Load Balancing')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#load-balancing')
              Markdown:)(')')
          Markdown:EOL('\n')
          WHITE_SPACE('      ')
          Markdown:UNORDERED_LIST
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Defined Type')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('balancer')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#defined-type-apachebalancer')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Defined Type')
                    Markdown::(':')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('apache')
                    Markdown::(':')
                    Markdown::(':')
                    Markdown:TEXT('balancermember')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#defined-type-apachebalancermember')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Examples')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('-')
                    WHITE_SPACE(' ')
                    Markdown:TEXT('Load balancing with exported and non-exported resources')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#examples')
                  Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('5. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Reference')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('An under-the-hood peek at what the module is doing and how')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#reference')
          Markdown:)(')')
      Markdown:EOL('\n')
      WHITE_SPACE('   ')
      Markdown:UNORDERED_LIST
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Classes')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#classes')
              Markdown:)(')')
          Markdown:EOL('\n')
          WHITE_SPACE('      ')
          Markdown:UNORDERED_LIST
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Public Classes')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#public-classes')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Private Classes')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#private-classes')
                  Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Defined Types')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#defined-types')
              Markdown:)(')')
          Markdown:EOL('\n')
          WHITE_SPACE('      ')
          Markdown:UNORDERED_LIST
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Public Defined Types')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#public-defined-types')
                  Markdown:)(')')
            Markdown:EOL('\n')
            WHITE_SPACE('      ')
            Markdown:LIST_ITEM
              Markdown:LIST_BULLET('  * ')
              Markdown:PARAGRAPH
                Markdown:INLINE_LINK
                  Markdown:LINK_TEXT
                    Markdown:[('[')
                    Markdown:TEXT('Private Defined Types')
                    Markdown:](']')
                  Markdown:(('(')
                  Markdown:LINK_DESTINATION
                    Markdown:TEXT('#private-defined-types')
                  Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Templates')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#templates')
              Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('6. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Limitations')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('OS compatibility,')
            WHITE_SPACE(' ')
            Markdown:TEXT('etc.')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#limitations')
          Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_NUMBER('7. ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Development')
            WHITE_SPACE(' ')
            Markdown:TEXT('-')
            WHITE_SPACE(' ')
            Markdown:TEXT('Guide for contributing to the module')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#development')
          Markdown:)(')')
      Markdown:EOL('\n')
      WHITE_SPACE('   ')
      Markdown:UNORDERED_LIST
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Contributing to the apache module')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#contributing')
              Markdown:)(')')
        Markdown:EOL('\n')
        WHITE_SPACE('   ')
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET(' * ')
          Markdown:PARAGRAPH
            Markdown:INLINE_LINK
              Markdown:LINK_TEXT
                Markdown:[('[')
                Markdown:TEXT('Running tests')
                WHITE_SPACE(' ')
                Markdown:TEXT('-')
                WHITE_SPACE(' ')
                Markdown:TEXT('A quick guide')
                Markdown:](']')
              Markdown:(('(')
              Markdown:LINK_DESTINATION
                Markdown:TEXT('#running-tests')
              Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Overview')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The apache module allows you to set up virtual hosts and manage web services with minimal effort.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Module Description')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Apache is a widely-used web server,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and this module provides a simplified way of creating configurations to manage your infrastructure.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This includes the ability to configure and manage a range of different virtual host setups,')
    WHITE_SPACE(' ')
    Markdown:TEXT('as well as a streamlined way to install and configure Apache modules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Setup')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('What apache affects')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('configuration files and directories')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('created and written to')
        Markdown:)(')')
      Markdown:EOL('\n')
      WHITE_SPACE('  ')
      Markdown:UNORDERED_LIST
        Markdown:LIST_ITEM
          Markdown:LIST_BULLET('  * ')
          Markdown:PARAGRAPH
            Markdown:STRONG
              Markdown:EMPH('*')
              Markdown:EMPH('*')
              Markdown:TEXT('WARNING')
              Markdown:EMPH('*')
              Markdown:EMPH('*')
            Markdown::(':')
            WHITE_SPACE(' ')
            Markdown:TEXT('Configurations that are')
            WHITE_SPACE(' ')
            Markdown:EMPH
              Markdown:EMPH('*')
              Markdown:TEXT('not')
              Markdown:EMPH('*')
            WHITE_SPACE(' ')
            Markdown:TEXT('managed by Puppet will be purged.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('package/service/configuration files for Apache')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Apache modules')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('virtual hosts')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('listened-to ports')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('/etc/make.conf')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('on FreeBSD')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Beginning with Apache')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To install Apache with the default parameters')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache':  }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The defaults are determined by your operating system')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('e.g.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Debian systems have one set of defaults,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and RedHat systems have another,')
    WHITE_SPACE(' ')
    Markdown:TEXT('as do FreeBSD systems')
    Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These defaults will work well in a testing environment,')
    WHITE_SPACE(' ')
    Markdown:TEXT('but are not suggested for production.')
    WHITE_SPACE(' ')
    Markdown:TEXT('To establish customized parameters')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      default_mods        => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      default_confd_files => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Configure a virtual host')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Declaring the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class will create a default virtual host by setting up a vhost on port 80,')
    WHITE_SPACE(' ')
    Markdown:TEXT('listening on all interfaces and serving')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('$apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('docroot')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To configure a very basic,')
    WHITE_SPACE(' ')
    Markdown:TEXT('name-based virtual host')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'first.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port    => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/var/www/first',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default priority is 15.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If nothing matches this priority,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the alphabetically first name-based vhost will be used.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is also true if you pass a higher priority and no names match anything else.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('A slightly more complicated example,')
    WHITE_SPACE(' ')
    Markdown:TEXT('changes the docroot owner/group from the default')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('root')
    Markdown:'(''')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'second.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port          => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot       => '/var/www/second',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot_owner => 'third',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot_group => 'third',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with SSL and default SSL certificates')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'ssl.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port    => '443',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/var/www/ssl',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl     => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with SSL and specific SSL certificates')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'fourth.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port     => '443',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot  => '/var/www/fourth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl      => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_cert => '/etc/ssl/fourth.example.com.cert',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_key  => '/etc/ssl/fourth.example.com.key',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Virtual hosts listen on')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:EMPH('*')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('by default.')
    WHITE_SPACE(' ')
    Markdown:TEXT('To listen on a specific IP address')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'subdomain.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip      => '127.0.0.1',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port    => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/var/www/subdomain',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with a wildcard alias for the subdomain mapped to a same-named directory,')
    WHITE_SPACE(' ')
    Markdown:TEXT('for example')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('http')
      Markdown::(':')
      Markdown:TEXT('//example.com.loc')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('/var/www/example.com')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'subdomain.loc':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      vhost_name       => '*',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port             => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      virtual_docroot' => '/var/www/%-2+',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot          => '/var/www',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      serveraliases    => ['*.loc',],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with suPHP')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'suphp.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port                => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot             => '/home/appuser/myphpapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_addhandler    => 'x-httpd-php',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_engine        => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_configpath    => '/etc/php5/apache2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories         => { path => '/home/appuser/myphpapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'suphp'           => { user => 'myappuser', group => 'myappgroup' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with WSGI')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'wsgi.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port                        => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot                     => '/var/www/pythonapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_application_group      => '%{GLOBAL}',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_daemon_process         => 'wsgi',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_daemon_process_options => {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        processes    => '2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        threads      => '15',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        display-name => '%{GROUP}',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('       },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_import_script          => '/var/www/demo.wsgi',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_import_script_options  =>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { process-group => 'wsgi', application-group => '%{GLOBAL}' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_process_group          => 'wsgi',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Starting in Apache 2.2.16,')
    WHITE_SPACE(' ')
    Markdown:TEXT('HTTPD supports')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('FallbackResource')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('a simple replacement for common RewriteRules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'wordpress.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port                => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot             => '/var/www/wordpress',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      fallbackresource    => '/index.php',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Please note that the')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('disabled')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('argument to FallbackResource is only supported since Apache 2.2.24.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('See a list of all')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('virtual host parameters')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#defined-type-apachevhost')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('See an extensive list of')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('virtual host examples')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#virtual-host-examples')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Usage')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Classes and Defined Types')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This module modifies Apache configuration files and directories,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and will purge any configuration not managed by Puppet.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Configuration of Apache should be managed by Puppet,')
    WHITE_SPACE(' ')
    Markdown:TEXT('as non-Puppet configuration files can cause unexpected failures.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('It is possible to temporarily disable full Puppet management by setting the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('purge_configs')
          Markdown:BACKTICK('`')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#purge_configs')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter within the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This option should only be used as a temporary means of saving and relocating customized configurations.')
    WHITE_SPACE(' ')
    Markdown:TEXT('See the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('purge_configs')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('parameter')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#purge_configs')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for more information.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The apache module')
    Markdown:'(''')
    Markdown:TEXT('s primary class,')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('guides the basic setup of Apache on your system.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('You may establish a default vhost in this class,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class,')
    WHITE_SPACE(' ')
    Markdown:TEXT('or both.')
    WHITE_SPACE(' ')
    Markdown:TEXT('You may add additional vhost configurations for specific virtual hosts using a declaration of the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('type.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Parameters within')
      WHITE_SPACE(' ')
      Markdown:CODE_SPAN
        Markdown:BACKTICK('`')
        Markdown:TEXT('apache')
        Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache_version')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configures the behavior of the module templates,')
    WHITE_SPACE(' ')
    Markdown:TEXT('package names,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and default mods by setting the Apache version.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Default is determined by the class')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('version')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('using the OS family and release.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It should not be configured manually without special reason.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('confd_dir')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the location of the configuration directory your custom configuration files are placed in.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/httpd/conf')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('conf_template')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Overrides the template used for the main apache configuration file.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('apache/httpd.conf.erb')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('Using this parameter is potentially risky,')
    WHITE_SPACE(' ')
    Markdown:TEXT('as the module has been built for a minimal configuration file with the configuration primarily coming from conf.d/')
    WHITE_SPACE(' ')
    Markdown:TEXT('entries.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_confd_files')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Generates default set of include-able Apache configuration files under')
    WHITE_SPACE('  ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('${apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('confd_dir}')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These configuration files correspond to what is usually installed with the Apache package on a given platform.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_mods')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets up Apache with default settings based on your OS.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or an array of mod names.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which will include the default')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('HTTPD mods')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//github.com/puppetlabs/puppetlabs-apache/blob/master/manifests/default_mods.pp')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If false,')
    WHITE_SPACE(' ')
    Markdown:TEXT('it will only include the mods required to make HTTPD work,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and any other mods can be declared on their own.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If an array,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the apache module will include the array of mods listed.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_ca')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default certificate authority,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_cert')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default SSL certification,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set based on your operating system')
    WHITE_SPACE('  ')
    Markdown:(('(')
    Markdown:'(''')
    Markdown:TEXT('/etc/pki/tls/certs/localhost.crt')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/ssl/certs/ssl-cert-snakeoil.pem')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/server.crt')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for FreeBSD')
    Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_chain')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default SSL chain,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_crl')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default certificate revocation list to use,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_crl_path')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default certificate revocation list path,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_key')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The default SSL key,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is automatically set based on your operating system')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:'(''')
    Markdown:TEXT('/etc/pki/tls/private/localhost.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/ssl/private/ssl-cert-snakeoil.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/server.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for FreeBSD')
    Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This default will work out of the box but must be updated with your specific certificate information before being used in production.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets up a default SSL virtual host.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('will set up the following vhost')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'default-ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port            => 443,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl             => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot         => $docroot,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      scriptalias     => $scriptalias,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      serveradmin     => $serveradmin,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      access_log_file => "ssl_${access_log_file}",')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('SSL vhosts only respond to HTTPS queries.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets up a default virtual host.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('to set up')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('customized virtual hosts')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#configure-a-virtual-host')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_documents')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables custom error documents.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('httpd_dir')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the base location of the configuration directories used for the apache service.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is useful for specially repackaged HTTPD builds,')
    WHITE_SPACE(' ')
    Markdown:TEXT('but may have unintended consequences when used in combination with the default distribution packages.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/httpd')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('keepalive')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables persistent connections.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('keepalive_timeout')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the amount of time the server will wait for subsequent requests on a persistent connection.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('15')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('max_keepalive_requests')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the limit of the number of requests allowed per connection when KeepAlive is on.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('100')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('log_level')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the verbosity level of the error log.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('warn')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('emerg')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('alert')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('crit')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('error')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('warn')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('notice')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('info')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('debug')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('log_formats')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Define additional')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('LogFormats')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_log_config.html#logformat')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is done in a Hash')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  $log_formats = { vhost_common => '%v %h %l %u %t \"%r\" %>s %b' }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('logroot')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the directory where Apache log files for the virtual host are placed.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/var/log/httpd')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/var/log/apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/var/log/apache22')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('manage_group')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Setting this to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('will stop the group resource from being created.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is for when you have a group,')
    WHITE_SPACE(' ')
    Markdown:TEXT('created from another Puppet module,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you want to use to run Apache.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Without this parameter,')
    WHITE_SPACE(' ')
    Markdown:TEXT('attempting to use a previously established group would result in a duplicate resource error.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('manage_user')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Setting this to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('will stop the user resource from being created.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is for instances when you have a user,')
    WHITE_SPACE(' ')
    Markdown:TEXT('created from another Puppet module,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you want to use to run Apache.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Without this parameter,')
    WHITE_SPACE(' ')
    Markdown:TEXT('attempting to use a previously established user would result in a duplicate resource error.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('mod_dir')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the location of the configuration directory your Apache modules configuration files are placed in.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/httpd/conf.d')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/apache2/mods-available')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/Modules')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('mpm_module')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines which MPM is loaded and configured for the HTTPD process.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('event')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('itk')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('peruser')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('prefork')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('worker')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('prefork')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat and FreeBSD,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('worker')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Must be set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('to explicitly declare the following classes with custom parameters')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('event')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('itk')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('peruser')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('prefork')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('worker')
          Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('Switching between different MPMs on FreeBSD is possible but quite difficult.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Before changing')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('$mpm_module')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('you must uninstall all packages that depend on your currently-installed Apache.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('package_ensure')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows control over the package ensure attribute.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Can be')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('present')
    Markdown:'(''')
    Markdown:TEXT(',')
    Markdown:'(''')
    Markdown:TEXT('absent')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or a version string.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ports_file')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the name of the file containing Apache ports configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Default is')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('${conf_dir}/ports.conf')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('purge_configs')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Removes all other Apache configs and vhosts,')
    WHITE_SPACE(' ')
    Markdown:TEXT('defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Setting this to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('is a stopgap measure to allow the apache module to coexist with existing or otherwise-managed configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It is recommended that you move your configuration entirely to resources within this module.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('sendfile')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Makes Apache use the Linux kernel sendfile to serve static files.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('On')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('serveradmin')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the server administrator.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('root@localhost')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('servername')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the server name.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('fqdn')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('provided by Facter.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('server_root')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the root directory in which the server resides.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/httpd')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('server_signature')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configures a trailing footer line under server-generated documents.')
    WHITE_SPACE(' ')
    Markdown:TEXT('More information about')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ServerSignature')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#serversignature')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('On')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('server_tokens')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Controls how much information Apache sends to the browser about itself and the operating system.')
    WHITE_SPACE(' ')
    Markdown:TEXT('More information about')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ServerTokens')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#servertokens')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('OS')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('service_enable')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines whether the HTTPD service is enabled when the machine is booted.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('service_ensure')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines whether the service should be running.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Can be set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is useful when you want to let the service be managed by some other application like Pacemaker.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('running')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('service_name')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Name of the Apache service to run.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('httpd')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('apache22')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('trace_enable')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Controls how TRACE requests per RFC 2616 are handled.')
    WHITE_SPACE(' ')
    Markdown:TEXT('More information about')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('TraceEnable')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#traceenable')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('On')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost_dir')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Changes the location of the configuration directory your virtual host configuration files are placed in.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('etc/httpd/conf.d')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/apache2/sites-available')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/Vhosts')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('default_mods')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Installs default Apache modules based on what OS you are running.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache::default_mods': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Defined Type')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Used to enable arbitrary Apache HTTPD modules for which there is no specific')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:[('[')
      Markdown:TEXT('name')
      Markdown:](']')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defined type will also install the required packages to enable the module,')
    WHITE_SPACE(' ')
    Markdown:TEXT('if any.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::mod { 'rewrite': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::mod { 'ldap': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Classes')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:[('[')
      Markdown:TEXT('name')
      Markdown:](']')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('There are many')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:[('[')
      Markdown:TEXT('name')
      Markdown:](']')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('classes within this module that can be declared using')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('include')
      Markdown:BACKTICK('`')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('actions')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('alias')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('auth_basic')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('auth_kerb')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('authnz_ldap')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('autoindex')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('cache')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('cgi')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('cgid')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('dav')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('dav_fs')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('dav_svn')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('deflate')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('dev')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('dir')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('disk_cache')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('event')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('expires')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('fastcgi')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('fcgid')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('headers')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('include')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('info')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('itk')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('ldap')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('mime')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('mime_magic')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('negotiation')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('nss')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('pagespeed')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('see')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('apache')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('mod')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('pagespeed')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#class-apachemodpagespeed')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('below')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('passenger')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('perl')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('peruser')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('php')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('requires')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('mpm_module')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#mpm_module')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('set to')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('prefork')
          Markdown:BACKTICK('`')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('prefork')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy_ajp')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy_balancer')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy_html')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy_http')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('python')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('reqtimeout')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('rewrite')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('rpaf')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('setenvif')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('speling')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('ssl')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('see')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('apache')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('mod')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('ssl')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#class-apachemodssl')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('below')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('status')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('suphp')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('userdir')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('vhost_alias')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('worker')
          Markdown:BACKTICK('`')
        Markdown:EMPH('*')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('wsgi')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('see')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('apache')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('mod')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('wsgi')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#class-apachemodwsgi')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('below')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('xsendfile')
          Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Modules noted with a * indicate that the module has settings and,')
    WHITE_SPACE(' ')
    Markdown:TEXT('thus,')
    WHITE_SPACE(' ')
    Markdown:TEXT('a template that includes parameters.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These parameters control the module')
    Markdown:'(''')
    Markdown:TEXT('s configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Most of the time,')
    WHITE_SPACE(' ')
    Markdown:TEXT('these parameters will not require any configuration or attention.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The modules mentioned above,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and other Apache modules that have templates,')
    WHITE_SPACE(' ')
    Markdown:TEXT('will cause template files to be dropped along with the mod install and the module will not work without the template.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Any module without a template will install the package but drop no files.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('pagespeed')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Installs and manages mod_pagespeed,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is a Google module that rewrites web pages to reduce latency and bandwidth.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This module does')
    WHITE_SPACE(' ')
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('not')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('manage the software repositories needed to automatically install the')
    Markdown:EOL('\n')
    Markdown:TEXT('mod-pagespeed-stable package.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The module does however require that the package be installed,')
    Markdown:EOL('\n')
    Markdown:TEXT('or be installable using the system')
    Markdown:'(''')
    Markdown:TEXT('s default package provider.')
    WHITE_SPACE('  ')
    Markdown:TEXT('You should ensure that this')
    Markdown:EOL('\n')
    Markdown:TEXT('pre-requisite is met or declaring')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('pagespeed')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('will cause the puppet run to fail.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('These are the defaults')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache::mod::pagespeed':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      inherit_vhost_config          => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      filter_xhtml                  => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      cache_path                    => '/var/cache/mod_pagespeed/',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      log_dir                       => '/var/log/pagespeed',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      memache_servers               => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrite_level                 => 'CoreFilters',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      disable_filters               => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      enable_filters                => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      forbid_filters                => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrite_deadline_per_flush_ms => 10,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      additional_domains            => undef,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      file_cache_size_kb            => 102400,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      file_cache_clean_interval_ms  => 3600000,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      lru_cache_per_process         => 1024,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      lru_cache_byte_limit          => 16384,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      css_flatten_max_bytes         => 2048,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      css_inline_max_bytes          => 2048,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      css_image_inline_max_bytes    => 2048,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      image_inline_max_bytes        => 2048,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      js_inline_max_bytes           => 2048,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      css_outline_min_bytes         => 3000,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      js_outline_min_bytes          => 3000,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      inode_limit                   => 500000,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      image_max_rewrites_at_once    => 8,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      num_rewrite_threads           => 4,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      num_expensive_rewrite_threads => 4,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      collect_statistics            => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      statistics_logging            => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      allow_view_stats              => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      allow_pagespeed_console       => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      allow_pagespeed_message       => [],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      message_buffer_size           => 100000,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      additional_configuration      => { }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Full documentation for mod_pagespeed is available from')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Google')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//modpagespeed.com')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('php')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Installs and configures mod_php.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The defaults are OS-dependant.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Overriding the package name')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  class {'::apache::mod::php':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    package_name => "php54-php",')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    path         => "${::apache::params::lib_path}/libphp54-php5.so",')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('ssl')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Installs Apache SSL capabilities and uses the ssl.conf.erb template.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These are the defaults')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache::mod::ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_compression => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_options     => [ 'StdEnvVars' ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To')
    WHITE_SPACE(' ')
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('use')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('SSL with a virtual host,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you must either set the')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_ssl_vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or set the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Class')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('wsgi')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables Python support in the WSGI module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('To use,')
    WHITE_SPACE(' ')
    Markdown:TEXT('simply')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('include')
      WHITE_SPACE(' ')
      Markdown:'(''')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('wsgi')
      Markdown:'(''')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('For customized parameters,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which tell Apache how Python is currently configured on the operating system,')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache::mod::wsgi':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_socket_prefix => "\${APACHE_RUN_DIR}WSGI",')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_python_home   => '/path/to/venv',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_python_path   => '/path/to/venv/site-packages',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('More information about')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('WSGI')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//modwsgi.readthedocs.org/en/latest/')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Defined Type')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The Apache module allows a lot of flexibility in the setup and configuration of virtual hosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This flexibility is due,')
    WHITE_SPACE(' ')
    Markdown:TEXT('in part,')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    Markdown:'(''')
    Markdown:TEXT('s being a defined resource type,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which allows it to be evaluated multiple times with different parameters.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defined type allows you to have specialized configurations for virtual hosts that have requirements outside the defaults.')
    WHITE_SPACE(' ')
    Markdown:TEXT('You can set up a default vhost within the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class,')
    WHITE_SPACE(' ')
    Markdown:TEXT('as well as set a customized vhost as default.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Your customized vhost')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('priority 10')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('will be privileged over the base class vhost')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('15')
    Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you have a series of specific configurations and do not want a base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class default vhost,')
    WHITE_SPACE(' ')
    Markdown:TEXT('make sure to set the base class')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    class { 'apache':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      default_vhost => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Parameters within')
      WHITE_SPACE(' ')
      Markdown:CODE_SPAN
        Markdown:BACKTICK('`')
        Markdown:TEXT('apache')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('vhost')
        Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies whether')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('access.log')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('directives')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('file')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('pipe')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('syslog')
      Markdown:BACKTICK('`')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('should be configured.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Setting the value to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('will choose none.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log_file')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('access.log')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('filename that is placed in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('$logroot')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Given a vhost,')
    WHITE_SPACE(' ')
    Markdown:TEXT('example.com,')
    WHITE_SPACE(' ')
    Markdown:TEXT('it defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('example.com_ssl.log')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for SSL vhosts and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('example.com_access.log')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for non-SSL vhosts.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log_pipe')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies a pipe to send access log messages to.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log_syslog')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sends all access log messages to syslog.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log_format')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the use of either a LogFormat nickname or a custom format string for the access log.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('combined')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('See')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('these examples')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_log_config.html')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('access_log_env_var')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies that only requests with particular environment variables be logged.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('add_listen')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines whether the vhost creates a Listen statement.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default value is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Setting')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('add_listen')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('stops the vhost from creating a Listen statement,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and this is important when you combine vhosts that are not passed an')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ip')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter with vhosts that')
    WHITE_SPACE(' ')
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('are')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('passed the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ip')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('additional_includes')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies paths to additional static,')
    WHITE_SPACE(' ')
    Markdown:TEXT('vhost-specific Apache configuration files.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Useful for implementing a unique,')
    WHITE_SPACE(' ')
    Markdown:TEXT('custom configuration not supported by this module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Can be an array.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('aliases')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Passes a list of hashes to the vhost to create Alias or AliasMatch directives as per the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('mod_alias documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_alias.html')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These hashes are formatted as follows')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('aliases => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  { aliasmatch => '^/image/(.*)\.jpg$',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    path       => '/files/jpg.images/$1.jpg',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  { alias      => '/image',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    path       => '/ftp/pub/image',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('For')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('alias')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('aliasmatch')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to work,')
    WHITE_SPACE(' ')
    Markdown:TEXT('each will need a corresponding context,')
    WHITE_SPACE(' ')
    Markdown:TEXT('such as')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:<('<')
    WHITE_SPACE(' ')
    Markdown:TEXT('Directory')
    WHITE_SPACE(' ')
    Markdown:TEXT('/path/to/directory')
    Markdown:>('>')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:<('<')
    Markdown:TEXT('Location')
    WHITE_SPACE(' ')
    Markdown:TEXT('/path/to/directory')
    Markdown:>('>')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The Alias and AliasMatch directives are created in the order specified in the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('aliases')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter.')
    WHITE_SPACE(' ')
    Markdown:TEXT('As described in the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('mod_alias')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_alias.html')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('more specific')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('alias')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('aliasmatch')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameters should come before the more general ones to avoid shadowing.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('If')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('is loaded and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('PassengerHighPerformance')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:TEXT('true')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('is set,')
    WHITE_SPACE(' ')
    Markdown:TEXT('then Alias may have issues honoring the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('PassengerEnabled')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:TEXT('off')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('statement.')
    WHITE_SPACE(' ')
    Markdown:TEXT('See')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('this article')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.conandalton.net/2010/06/passengerenabled-off-not-working.html')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for details.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('block')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the list of things Apache will block access to.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is an empty set,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Currently,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the only option is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('scm')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which blocks web access to')
    WHITE_SPACE(' ')
    Markdown:TEXT('.svn,')
    WHITE_SPACE(' ')
    Markdown:TEXT('.git and')
    WHITE_SPACE(' ')
    Markdown:TEXT('.bzr directories.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('custom_fragment')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Passes a string of custom configuration directives to be placed at the end of the vhost configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets a given')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('as the default to serve requests that do not match any other')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('definitions.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default value is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('See the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('directories')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('section')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#parameter-directories-for-apachevhost')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directoryindex')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the list of resources to look for when a client requests an index of the directory by specifying a')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('at the end of the directory name.')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('DirectoryIndex')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_dir.html#directoryindex')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('has more information.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Provides the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('DocumentRoot')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#documentroot')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which identifies the directory Apache serves files from.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Required.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot_group')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets group access to the docroot directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('root')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot_owner')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets individual user access to the docroot directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('root')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot_mode')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets access permissions of the docroot directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_log')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies whether')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('error.log')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('directives should be configured.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_log_file')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Points to the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:EMPH('*')
      Markdown:EMPH('_')
      Markdown:TEXT('error.log')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('file.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Given a vhost,')
    WHITE_SPACE(' ')
    Markdown:TEXT('example.com,')
    WHITE_SPACE(' ')
    Markdown:TEXT('it defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('example.com_ssl_error.log')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for SSL vhosts and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('example.com_access_error.log')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for non-SSL vhosts.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_log_pipe')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies a pipe to send error log messages to.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_log_syslog')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sends all error log messages to syslog.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_documents')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('A list of hashes which can be used to override the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ErrorDocument')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#errordocument')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('settings for this vhost.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Example')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      error_documents => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { 'error_code' => '503', 'document' => '/service-unavail' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { 'error_code' => '407', 'document' => 'https://example.com/proxy/login' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ensure')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies if the vhost file is present or absent.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('present')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('fallbackresource')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('FallbackResource')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_dir.html#fallbackresource')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which specifies an action to take for any URL that doesn')
    Markdown:'(''')
    Markdown:TEXT('t map to anything in your filesystem and would otherwise return')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('HTTP 404')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('Not Found')
    Markdown:)(')')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values must either begin with a')
    WHITE_SPACE(' ')
    Markdown:TEXT('/')
    WHITE_SPACE(' ')
    Markdown:TEXT('or be')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('disabled')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('headers')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Adds lines to replace,')
    WHITE_SPACE(' ')
    Markdown:TEXT('merge,')
    WHITE_SPACE(' ')
    Markdown:TEXT('or remove response headers.')
    WHITE_SPACE(' ')
    Markdown:TEXT('See')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Header')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_headers.html#header')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for more information.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Can be an array.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ip')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the IP address the vhost listens on.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to listen on all IPs.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ip_based')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables an')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('IP-based')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/vhosts/ip-based.html')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('vhost.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter inhibits the creation of a NameVirtualHost directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('since those are used to funnel requests to name-based vhosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('itk')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configures')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ITK')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//mpm-itk.sesse.net/')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('in a hash.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Keys may be')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('user')
        WHITE_SPACE(' ')
        Markdown:TEXT('+')
        WHITE_SPACE(' ')
        Markdown:TEXT('group')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('assignuseridexpr')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('assigngroupidexpr')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('maxclientvhost')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('nice')
          Markdown:BACKTICK('`')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('limituidrange')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('Linux 3.5.0 or newer')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('limitgidrange')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('Linux 3.5.0 or newer')
        Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Usage will typically look like')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      itk     => {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        user  => 'someuser',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        group => 'somegroup',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('logroot')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the location of the virtual host')
    Markdown:'(''')
    Markdown:TEXT('s logfiles.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/var/log/')
    Markdown:HTML_TAG('<apache log location>')
    Markdown:TEXT('/')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('log_level')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the verbosity of the error log.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('warn')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for the global server configuration and can be overridden on a per-vhost basis.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('emerg')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('alert')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('crit')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('error')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('warn')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('notice')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('info')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('debug')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('no_proxy_uris')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies URLs you do not want to proxy.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter is meant to be used in combination with')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('proxy_dest')
          Markdown:BACKTICK('`')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#proxy_dest')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Options')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#options')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for the specified virtual host.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:SHORT_REFERENCE_LINK
      Markdown:LINK_LABEL
        Markdown:[('[')
        Markdown:'(''')
        Markdown:TEXT('Indexes')
        Markdown:'(''')
        Markdown:TEXT(',')
        Markdown:'(''')
        Markdown:TEXT('FollowSymLinks')
        Markdown:'(''')
        Markdown:TEXT(',')
        Markdown:'(''')
        Markdown:TEXT('MultiViews')
        Markdown:'(''')
        Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('as demonstrated below')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      options => ['Indexes','FollowSymLinks','MultiViews'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('If you use')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('directories')
          Markdown:BACKTICK('`')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#parameter-directories-for-apachevhost')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('Options')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('Override')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('DirectoryIndex')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('are ignored because they are parameters within')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('override')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the overrides for the specified virtual host.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Accepts an array of')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AllowOverride')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#allowoverride')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('arguments.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:SHORT_REFERENCE_LINK
      Markdown:LINK_LABEL
        Markdown:[('[')
        Markdown:TEXT('none')
        Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('php_admin_flags')
      WHITE_SPACE(' ')
      Markdown:TEXT('&')
      WHITE_SPACE(' ')
      Markdown:TEXT('values')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows per-vhost setting')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('php_admin_value')
          Markdown:BACKTICK('`')
        Markdown:TEXT('s or')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('php_admin_flag')
          Markdown:BACKTICK('`')
        Markdown:TEXT('s')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//php.net/manual/en/configuration.changes.php')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These flags or values cannot be overwritten by a user or an application.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('port')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the port the host is configured on.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The module')
    Markdown:'(''')
    Markdown:TEXT('s defaults ensure the host listens on port 80 for non-SSL vhosts and port 443 for SSL vhosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The host will only listen on the port set in this parameter.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('priority')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the relative load-order for Apache HTTPD VirtualHost configuration files.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('25')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If nothing matches the priority,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the first name-based vhost will be used.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Likewise,')
    WHITE_SPACE(' ')
    Markdown:TEXT('passing a higher priority will cause the alphabetically first name-based vhost to be used if no other names match.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('You should not need to use this parameter.')
    WHITE_SPACE(' ')
    Markdown:TEXT('However,')
    WHITE_SPACE(' ')
    Markdown:TEXT('if you do use it,')
    WHITE_SPACE(' ')
    Markdown:TEXT('be aware that the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('default_vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter for')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('passes a priority of')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('15')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('proxy_dest')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the destination address of a')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ProxyPass')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('proxy_pass')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies an array of')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('path')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:TEXT('URI')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('for a')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ProxyPass')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_proxy.html#proxypass')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  proxy_pass => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    { 'path' => '/a', 'url' => 'http://backend-a/' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    { 'path' => '/b', 'url' => 'http://backend-b/' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    { 'path' => '/c', 'url' => 'http://backend-a/c' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('}')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('rack_base_uris')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the resource identifiers for a rack configuration.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The file paths specified will be listed as rack application roots for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Phusion Passenger')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#')
        Markdown:EMPH('_')
        Markdown:TEXT('railsbaseuri_and_rackbaseuri')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('in the')
    WHITE_SPACE(' ')
    Markdown:EMPH('_')
    Markdown:TEXT('rack.erb template.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirect_dest')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the address to redirect to.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirect_source')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the source URIs that will redirect to the destination specified in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirect_dest')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If more than one item for redirect is supplied,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the source and destination must be the same length and the items will be order-dependent.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirect_source => ['/images','/downloads'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirect_dest   => ['http://img.example.com/','http://downloads.example.com/'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirect_status')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the status to append to the redirect.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirect_status => ['temp','permanent'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirectmatch_regexp')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('redirectmatch_status')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines which server status should be raised for a given regular expression.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Entered as an array.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirectmatch_status => ['404','404'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirectmatch_regexp => ['\.git(/.*|$)/','\.svn(/.*|$)'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('request_headers')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Modifies collected')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('request headers')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_headers.html#requestheader')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('in various ways,')
    WHITE_SPACE(' ')
    Markdown:TEXT('including adding additional request headers,')
    WHITE_SPACE(' ')
    Markdown:TEXT('removing request headers,')
    WHITE_SPACE(' ')
    Markdown:TEXT('etc.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      request_headers => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'append MirrorID "mirror 12"',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'unset MirrorID',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('rewrites')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Creates URL rewrite rules.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Expects an array of hashes,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and the hash keys can be any of')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('comment')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('rewrite_base')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('rewrite_cond')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('rewrite_rule')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('For example,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you can specify that anyone trying to access index.html will be served welcome.html')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrites => [ { rewrite_rule => ['^index\.html$ welcome.html'] } ]')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The parameter allows rewrite conditions that,')
    WHITE_SPACE(' ')
    Markdown:TEXT('when true,')
    WHITE_SPACE(' ')
    Markdown:TEXT('will execute the associated rule.')
    WHITE_SPACE(' ')
    Markdown:TEXT('For instance,')
    WHITE_SPACE(' ')
    Markdown:TEXT('if you wanted to rewrite URLs only if the visitor is using IE')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrites => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          comment      => 'redirect IE',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_rule => ['^index\.html$ welcome.html'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('You can also apply multiple conditions.')
    WHITE_SPACE(' ')
    Markdown:TEXT('For instance,')
    WHITE_SPACE(' ')
    Markdown:TEXT('rewrite index.html to welcome.html only when the browser is Lynx or Mozilla')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('version 1 or 2')
    Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrites => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          comment      => 'Lynx or Mozilla v1/2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_rule => ['^index\.html$ welcome.html'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Multiple rewrites and conditions are also possible')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'site.name.fdqn':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rewrites => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          comment      => 'Lynx or Mozilla v1/2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_cond => ['%{HTTP_USER_AGENT} ^Lynx/ [OR]', '%{HTTP_USER_AGENT} ^Mozilla/[12]'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_rule => ['^index\.html$ welcome.html'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          comment      => 'Internet Explorer',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_cond => ['%{HTTP_USER_AGENT} ^MSIE'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_rule => ['^index\.html$ /index.IE.html [L]'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_base => /apps/,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          rewrite_rule => ['^index\.cgi$ index.php', '^index\.html$ index.php', '^index\.asp$ index.html'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('     ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Refer to the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('mod_rewrite')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_rewrite.html')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for more details on what is possible with rewrite rules and conditions.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('scriptalias')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Defines a directory of CGI scripts to be aliased to the path')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/cgi-bin')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('for example')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/scripts')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('scriptaliases')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Passes an array of hashes to the vhost to create either ScriptAlias or ScriptAliasMatch statements as per the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('mod_alias')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_alias.html')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These hashes are formatted as follows')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    scriptaliases => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        alias => '/myscript',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        path  => '/usr/share/myscript',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        aliasmatch => '^/foo(.*)',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        path       => '/usr/share/fooscripts$1',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        aliasmatch => '^/bar/(.*)',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        path       => '/usr/share/bar/wrapper.sh/$1',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        alias => '/neatscript',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        path  => '/usr/share/neatscript',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    ]')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The ScriptAlias and ScriptAliasMatch directives are created in the order specified.')
    WHITE_SPACE(' ')
    Markdown:TEXT('As with')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Alias and AliasMatch')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#aliases')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directives,')
    WHITE_SPACE(' ')
    Markdown:TEXT('more specific aliases should come before more general ones to avoid shadowing.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('serveradmin')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the email address Apache will display when it renders one of its error pages.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('serveraliases')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ServerAliases')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#serveralias')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('of the site.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('servername')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the servername corresponding to the hostname you connect to the virtual host at.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to the title of the resource.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('setenv')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Used by HTTPD to set environment variables for vhosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('setenvif')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Used by HTTPD to conditionally set environment variables for vhosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:[('[')
    Markdown:](']')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_addhandler')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_configpath')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_engine')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up a virtual host with')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('suPHP')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//suphp.org/DocumentationView.html?file=apache/CONFIG')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_addhandler')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('php5-script')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat and FreeBSD,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('x-httpd-php')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_configpath')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat and FreeBSD,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/php5/apache2')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_engine')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('allows values')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('on')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('off')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('off')
    Markdown:'(''')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with suPHP')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'suphp.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port                => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot             => '/home/appuser/myphpapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_addhandler    => 'x-httpd-php',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_engine        => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      suphp_configpath    => '/etc/php5/apache2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories         => { path => '/home/appuser/myphpapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'suphp'           => { user => 'myappuser', group => 'myappgroup' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost_name')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables name-based virtual hosting.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If no IP is passed to the virtual host but the vhost is assigned a port,')
    WHITE_SPACE(' ')
    Markdown:TEXT('then the vhost name will be')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('vhost_name')
    Markdown::(':')
    Markdown:TEXT('port')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If the virtual host has no assigned IP or port,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the vhost name will be set to the title of the resource.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:EMPH('*')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('virtual_docroot')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets up a virtual host with a wildcard alias subdomain mapped to a directory with the same name.')
    WHITE_SPACE(' ')
    Markdown:TEXT('For example,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//example.com')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('would map to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/var/www/example.com')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'subdomain.loc':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      vhost_name       => '*',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port             => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      virtual_docroot' => '/var/www/%-2+',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot          => '/var/www',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      serveraliases    => ['*.loc',],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_daemon_process')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_daemon_process_options')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_process_group')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_script_aliases')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up a virtual host with')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('WSGI')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//code.google.com/p/modwsgi/')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_daemon_process')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('sets the name of the WSGI daemon.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It is a hash,')
    WHITE_SPACE(' ')
    Markdown:TEXT('accepting')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('these keys')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//modwsgi.readthedocs.org/en/latest/configuration-directives/WSGIDaemonProcess.html')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('and it defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_daemon_process_options')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('is optional and defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_process_group')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('sets the group ID the virtual host will run under.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('wsgi_script_aliases')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('requires a hash of web paths to filesystem')
    WHITE_SPACE(' ')
    Markdown:TEXT('.wsgi paths.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To set up a virtual host with WSGI')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'wsgi.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port                        => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot                     => '/var/www/pythonapp',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_daemon_process         => 'wsgi',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_daemon_process_options =>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { processes    => '2',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          threads      => '15',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          display-name => '%{GROUP}',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('         },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_process_group          => 'wsgi',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      wsgi_script_aliases         => { '/' => '/var/www/demo.wsgi' },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Parameter')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('for')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter within the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class passes an array of hashes to the vhost to create')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Directory')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#directory')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('File')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#files')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Location')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#location')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive blocks.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These blocks take the form,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:<('<')
    WHITE_SPACE(' ')
    Markdown:TEXT('Directory')
    WHITE_SPACE(' ')
    Markdown:TEXT('/path/to/directory')
    Markdown:>('>')
    Markdown:TEXT('...')
    Markdown:<('<')
    WHITE_SPACE(' ')
    Markdown:TEXT('/Directory')
    Markdown:>('>')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Each hash passed to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('must contain')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('path')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('as one of the keys.')
    WHITE_SPACE('  ')
    Markdown:TEXT('You may also pass in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('provider')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('which,')
    WHITE_SPACE(' ')
    Markdown:TEXT('if missing,')
    WHITE_SPACE(' ')
    Markdown:TEXT('defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('directory')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('A full list of acceptable keys is below.')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('General usage will look something like')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path => '/path/to/directory', <key> => <value> },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path => '/path/to/another/directory', <key> => <value> },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('At least one directory should match the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Once you start declaring directories,')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('assumes that all required Directory blocks will be declared.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If not defined,')
    WHITE_SPACE(' ')
    Markdown:TEXT('a single default Directory block will be created that matches the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('provider')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('key can be set to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('directory')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('files')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('location')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If the path starts with a')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('~')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#files')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('HTTPD will interpret this as the equivalent of DirectoryMatch,')
    WHITE_SPACE(' ')
    Markdown:TEXT('FilesMatch,')
    WHITE_SPACE(' ')
    Markdown:TEXT('or LocationMatch.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'files.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/var/www/files',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { 'path'     => '/var/www/files',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          'provider' => 'files',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          'deny'     => 'from all'')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('         },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Available handlers,')
    WHITE_SPACE(' ')
    Markdown:TEXT('represented as keys,')
    WHITE_SPACE(' ')
    Markdown:TEXT('should be placed within the')
    WHITE_SPACE('  ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directory')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:'(''')
      Markdown:TEXT('files')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('location')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('hashes.')
    WHITE_SPACE('  ')
    Markdown:TEXT('This looks like')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [ { path => '/path/to/directory', handler => value } ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('}')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Any handlers you do not set in these hashes will be considered')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undefined')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('within Puppet and will not be added to the virtual host,')
    WHITE_SPACE(' ')
    Markdown:TEXT('resulting in the module using their default values.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Currently this is the list of supported handlers')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('addhandlers')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AddHandler')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_mime.html#addhandler')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directives,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which map filename extensions to the specified handler.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Accepts a list of hashes,')
    WHITE_SPACE(' ')
    Markdown:TEXT('with')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('extensions')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('serving to list the extensions being managed by the handler,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and takes the form')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('{')
      WHITE_SPACE(' ')
      Markdown:TEXT('handler')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:'(''')
      Markdown:TEXT('handler-name')
      Markdown:'(''')
      Markdown:TEXT(',')
      WHITE_SPACE(' ')
      Markdown:TEXT('extensions')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:[('[')
      Markdown:'(''')
      Markdown:TEXT('extension')
      Markdown:'(''')
      Markdown:](']')
      Markdown:TEXT('}')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path        => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          addhandlers => [{ handler => 'cgi-script', extensions => ['.cgi']}],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('allow')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets an')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Allow')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/2.2/mod/mod_authz_host.html#allow')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which groups authorizations based on hostnames or IPs.')
    WHITE_SPACE(' ')
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Deprecated')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter is being deprecated due to a change in Apache.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It will only work with Apache 2.2 and lower.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path  => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          allow => 'from example.org',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('allow_override')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the types of directives allowed in')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('.htaccess')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#allowoverride')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('files.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Accepts an array.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot      => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories  => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path           => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          allow_override => ['AuthConfig', 'Indexes'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_basic_authoritative')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthBasicAuthoritative')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicauthoritative')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which determines whether authorization and authentication are passed to lower level Apache modules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_basic_fake')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthBasicFake')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicfake')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which statically configures authorization credentials for a given directive block.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_basic_provider')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:SHORT_REFERENCE_LINK
      Markdown:LINK_LABEL
        Markdown:[('[')
        Markdown:TEXT('AuthBasicProvider')
        Markdown:](']')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_basic.html#authbasicprovider')
    Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the authentication provider for a given location.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_algorithm')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthDigestAlgorithm')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestalgorithm')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which selects the algorithm used to calculate the challenge and response hashes.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_domain')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthDigestDomain')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestdomain')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which allows you to specify one or more URIs in the same protection space for digest authentication.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_nonce_lifetime')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthDigestNonceLifetime')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestnoncelifetime')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which controls how long the server nonce is valid.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_provider')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthDigestProvider')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestprovider')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the authentication provider for a given location.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_qop')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthDigestQop')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestqop')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which determines the quality-of-protection to use in digest authentication.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_digest_shmem_size')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthAuthDigestShmemSize')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_auth_digest.html#authdigestshmemsize')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which defines the amount of shared memory allocated to the server for keeping track of clients.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_group_file')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthGroupFile')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_authz_groupfile.html#authgroupfile')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the name of the text file containing the list of user groups for authorization.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_name')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthName')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_authn_core.html#authname')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the name of the authorization realm.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_require')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the entity name you')
    Markdown:'(''')
    Markdown:TEXT('re requiring to allow access.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Read more about')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Require')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_authz_host.html#requiredirectives')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_type')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthType')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_authn_core.html#authtype')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which guides the type of user authentication.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('auth_user_file')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('AuthUserFile')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_authn_file.html#authuserfile')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the name of the text file containing the users/passwords for authentication.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('custom_fragment')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Pass a string of custom configuration directives to be placed at the end of the directory configuration.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  apache::vhost { 'monitor':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    custom_fragment => '')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  <Location /balancer-manager>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    SetHandler balancer-manager')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    Order allow,deny')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    Allow from all')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  </Location>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  <Location /server-status>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    SetHandler server-status')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    Order allow,deny')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    Allow from all')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  </Location>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  ProxyStatus On',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('}')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('deny')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets a')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Deny')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/2.2/mod/mod_authz_host.html#deny')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('specifying which hosts are denied access to the server.')
    WHITE_SPACE(' ')
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Deprecated')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter is being deprecated due to a change in Apache.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It will only work with Apache 2.2 and lower.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          deny => 'from example.org',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('error_documents')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('An array of hashes used to override the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ErrorDocument')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/core.html#errordocument')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('settings for the directory.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path            => '/srv/www',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          error_documents => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('            { 'error_code' => '503',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('              'document'   => '/service-unavail',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('            },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('headers')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Adds lines for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Header')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_headers.html#header')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directives.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => {')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        path    => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        headers => 'Set X-Robots-Tag "noindex, noarchive, nosnippet"',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('index_options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows configuration settings for')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('directory indexing')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/mod_autoindex.html#indexoptions')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path          => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          options       => ['Indexes','FollowSymLinks','MultiViews'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          index_options => ['IgnoreCase', 'FancyIndexing', 'FoldersFirst', 'NameWidth=*', 'DescriptionWidth=*', 'SuppressHTMLPreamble'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('index_order_default')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('default ordering')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_autoindex.html#indexorderdefault')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('of the directory index.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path                => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          order               => 'Allow,Deny',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          index_order_default => ['Descending', 'Date'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Lists the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Options')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/current/mod/core.html#options')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for the given Directory block.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path    => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          options => ['Indexes','FollowSymLinks','MultiViews'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('order')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the order of processing Allow and Deny statements as per')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Apache core documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('httpd.apache.org/docs/2.2/mod/mod_authz_host.html#order')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Deprecated')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter is being deprecated due to a change in Apache.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It will only work with Apache 2.2 and lower.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path  => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          order => 'Allow,Deny',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('sethandler')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets a')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('SetHandler')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive as per the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Apache Core documentation')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/2.2/mod/core.html#sethandler')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('An example')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path       => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          sethandler => 'None',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('passenger_enabled')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the value for the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('PassengerEnabled')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerEnabled')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directory to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('on')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('off')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Requires')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to be included.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path              => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          passenger_enabled => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH
      Markdown:EMPH('*')
      Markdown:TEXT('Note')
      Markdown::(':')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('Be aware that there is an')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('issue')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.conandalton.net/2010/06/passengerenabled-off-not-working.html')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('using the PassengerEnabled directive with the PassengerHighPerformance directive.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('php_admin_value')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('php_admin_flag')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('php_admin_value')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('sets the value of the directory,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('php_admin_flag')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('uses a boolean to configure the directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Further information can be found')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('here')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//php.net/manual/en/configuration.changes.php')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('String or list of')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLOptions')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which configure SSL engine run-time options.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This handler takes precedence over SSLOptions set in the parent block of the vhost.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'secure.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path        => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          ssl_options => '+ExportCertData',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path        => '/path/to/different/dir',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          ssl_options => [ '-StdEnvVars', '+ExportCertData'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('######')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('A hash containing the')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('user')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('group')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('keys for the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('suPHP_UserGroup')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.suphp.org/DocumentationView.html?file=apache/CONFIG')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('setting.')
    WHITE_SPACE(' ')
    Markdown:TEXT('It must be used with')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('suphp_engine')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:TEXT('on')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('in the vhost declaration,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and may only be passed within')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('directories')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'secure.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      directories => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        { path  => '/path/to/directory',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          suphp =>')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('            { user  =>  'myappuser',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('              group => 'myappgroup',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('            },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        },')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####SSL parameters for')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('All of the SSL parameters for')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('will default to whatever is set in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Use the below parameters to tweak individual SSL settings for specific vhosts.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Enables SSL for the virtual host.')
    WHITE_SPACE(' ')
    Markdown:TEXT('SSL vhosts only respond to HTTPS queries.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('or')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_ca')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the SSL certificate authority.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_cert')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the SSL certification.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults are based on your OS')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/pki/tls/certs/localhost.crt')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/ssl/certs/ssl-cert-snakeoil.pem')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/server.crt')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_protocol')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLProtocol')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslprotocol')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you do not use this parameter,')
    WHITE_SPACE(' ')
    Markdown:TEXT('it will use the HTTPD default from ssl.conf.erb,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('all')
    WHITE_SPACE(' ')
    Markdown:TEXT('-SSLv2')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_cipher')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLCipherSuite')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslciphersuite')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you do not use this parameter,')
    WHITE_SPACE(' ')
    Markdown:TEXT('it will use the HTTPD default from ssl.conf.erb,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('HIGH')
    Markdown::(':')
    Markdown:TEXT('MEDIUM')
    Markdown::(':')
    Markdown:!('!')
    Markdown:TEXT('aNULL')
    Markdown::(':')
    Markdown:!('!')
    Markdown:TEXT('MD5')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_honorcipherorder')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLHonorCipherOrder')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslhonorcipherorder')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which is used to prefer the server')
    Markdown:'(''')
    Markdown:TEXT('s cipher preference order.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('On')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('config.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_certs_dir')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the location of the SSL certification directory.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/ssl/certs')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on Debian,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/pki/tls/certs')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on RedHat,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('on FreeBSD.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_chain')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the SSL chain.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('This default will work out of the box but must be updated in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class with your specific certificate information before being used in production.')
    Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_crl')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the certificate revocation list to use.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('This default will work out of the box but must be updated in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class with your specific certificate information before being used in production.')
    Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_crl_path')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the location of the certificate revocation list.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('This default will work out of the box but must be updated in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class with your specific certificate information before being used in production.')
    Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_key')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the SSL key.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults are based on your operating system')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/pki/tls/private/localhost.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for RedHat,')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/etc/ssl/private/ssl-cert-snakeoil.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for Debian,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('/usr/local/etc/apache22/server.key')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('for FreeBSD.')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('This default will work out of the box but must be updated in the base')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class with your specific certificate information before being used in production.')
    Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_verify_client')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLVerifyClient')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifyclient')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which sets the certificate verification level for client authentication.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('none')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('optional')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('require')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('optional_no_ca')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_verify_client => 'optional',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_verify_depth')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLVerifyDepth')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslverifydepth')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which specifies the maximum depth of CA certificates in client certificate verification.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_verify_depth => 1,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLOptions')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#ssloptions')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('directive,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which configures various SSL engine run-time options.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is the global setting for the given vhost and can be a string or an array.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('undef')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('A string')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_options => '+ExportCertData',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('An array')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sample.example.net':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      …')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl_options => [ '+StrictRequire', '+ExportCertData' ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('ssl_proxyengine')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies whether or not to use')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('SSLProxyEngine')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_ssl.html#sslproxyengine')
      Markdown:)(')')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values are')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Virtual Host Examples')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The apache module allows you to set up pretty much any configuration of virtual host you might need.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This section will address some common configurations,')
    WHITE_SPACE(' ')
    Markdown:TEXT('but look at the')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Tests section')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//github.com/puppetlabs/puppetlabs-apache/tree/master/tests')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for even more examples.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configure a vhost with a server administrator')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'third.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port        => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/var/www/third',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      serveradmin => 'admin@example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up a vhost with aliased servers')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sixth.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      serveraliases => [')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'sixth.example.org',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        'sixth.example.net',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port          => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot       => '/var/www/fifth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configure a vhost with a cgi-bin')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'eleventh.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port        => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot     => '/var/www/eleventh',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      scriptalias => '/usr/lib/cgi-bin',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up a vhost with a rack configuration')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'fifteenth.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port           => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot        => '/var/www/fifteenth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      rack_base_uris => ['/rackapp1', '/rackapp2'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up a mix of SSL and non-SSL vhosts at the same domain')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    #The non-ssl vhost')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'first.example.com non-ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername => 'first.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/first',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    #The SSL vhost at the same domain')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'first.example.com ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername => 'first.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '443',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/first',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl        => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configure a vhost to redirect non-SSL connections to SSL')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sixteenth.example.com non-ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername      => 'sixteenth.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port            => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot         => '/var/www/sixteenth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirect_status => 'permanent',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      redirect_dest   => 'https://sixteenth.example.com/'')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'sixteenth.example.com ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername => 'sixteenth.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '443',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/sixteenth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl        => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set up IP-based vhosts on any listen port and have them respond to requests on specific IP addresses.')
    WHITE_SPACE(' ')
    Markdown:TEXT('In this example,')
    WHITE_SPACE(' ')
    Markdown:TEXT('we will set listening on ports 80 and 81.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This is required because the example vhosts are not declared with a port parameter.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::listen { '80': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::listen { '81': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Then we will set up the IP-based vhosts')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'first.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip       => '10.0.0.10',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot  => '/var/www/first',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip_based => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'second.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip       => '10.0.0.11',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot  => '/var/www/second',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip_based => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:HORIZONTAL_RULE('- - -')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configure a mix of name-based and IP-based vhosts.')
    WHITE_SPACE(' ')
    Markdown:TEXT('First,')
    WHITE_SPACE(' ')
    Markdown:TEXT('we will add two IP-based vhosts on 10.0.0.10,')
    WHITE_SPACE(' ')
    Markdown:TEXT('one SSL and one non-SSL')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'The first IP-based vhost, non-ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername => 'first.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip         => '10.0.0.10',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip_based   => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/first',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'The first IP-based vhost, ssl':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      servername => 'first.example.com',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip         => '10.0.0.10',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '443',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip_based   => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/first-ssl',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ssl        => true,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Then,')
    WHITE_SPACE(' ')
    Markdown:TEXT('we will add two name-based vhosts listening on 10.0.0.20')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'second.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip      => '10.0.0.20',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port    => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/var/www/second',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'third.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      ip      => '10.0.0.20',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port    => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot => '/var/www/third',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you want to add two name-based vhosts so that they will answer on either 10.0.0.10 or 10.0.0.20,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you')
    WHITE_SPACE(' ')
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('MUST')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
    WHITE_SPACE(' ')
    Markdown:TEXT('declare')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('add_listen')
      WHITE_SPACE(' ')
      Markdown:TEXT('=')
      Markdown:>('>')
      WHITE_SPACE(' ')
      Markdown:'(''')
      Markdown:TEXT('false')
      Markdown:'(''')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('to disable the otherwise automatic')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('Listen 80')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('as it will conflict with the preceding IP-based vhosts.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'fourth.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/fourth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      add_listen => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::vhost { 'fifth.example.com':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      port       => '80',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      docroot    => '/var/www/fifth',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      add_listen => false,')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Load Balancing')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Defined Type')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancer')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancer')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('creates an Apache balancer cluster.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Each balancer cluster needs one or more balancer members,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which are declared with')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('balancermember')
          Markdown:BACKTICK('`')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('#defined-type-apachebalancermember')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('One')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancer')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defined resource should be defined for each Apache load balanced set of servers.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancermember')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('resources for all balancer members can be exported and collected on a single Apache load balancer server using exported resources.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Parameters within')
      WHITE_SPACE(' ')
      Markdown:CODE_SPAN
        Markdown:BACKTICK('`')
        Markdown:TEXT('apache')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('balancer')
        Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('name')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the balancer cluster')
    Markdown:'(''')
    Markdown:TEXT('s title.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This parameter will also set the title of the conf.d file.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('proxy_set')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configures key-value pairs as')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ProxySet')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_proxy.html#proxyset')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('lines.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Accepts a hash,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('{}')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('collect_exported')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Determines whether or not to use exported resources.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Valid values')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you statically declare all of your backend servers,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you should set this to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('false')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('to rely on existing declared balancer member resources.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Also make sure to use')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancermember')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('with array arguments.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you wish to dynamically declare your backend servers via')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('exported resources')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//docs.puppetlabs.com/guides/exported_resources.html')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('collected on a central node,')
    WHITE_SPACE(' ')
    Markdown:TEXT('you must set this parameter to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('true')
    Markdown:'(''')
    WHITE_SPACE(' ')
    Markdown:TEXT('in order to collect the exported balancer member resources that were exported by the balancer member nodes.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you choose not to use exported resources,')
    WHITE_SPACE(' ')
    Markdown:TEXT('all balancer members will be configured in a single puppet run.')
    WHITE_SPACE(' ')
    Markdown:TEXT('If you are using exported resources,')
    WHITE_SPACE(' ')
    Markdown:TEXT('Puppet has to run on the balanced nodes,')
    WHITE_SPACE(' ')
    Markdown:TEXT('then run on the balancer.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Defined Type')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancermember')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Defines members of')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('mod_proxy_balancer')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_proxy_balancer.html')
      Markdown:)(')')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('which will set up a balancer member inside a listening service configuration block in etc/apache/apache.cfg on the load balancer.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:STRONG
      Markdown:EMPH('*')
      Markdown:EMPH('*')
      Markdown:TEXT('Parameters within')
      WHITE_SPACE(' ')
      Markdown:CODE_SPAN
        Markdown:BACKTICK('`')
        Markdown:TEXT('apache')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('balancermember')
        Markdown:BACKTICK('`')
      Markdown::(':')
      Markdown:EMPH('*')
      Markdown:EMPH('*')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('name')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the title of the resource.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This name will also set the name of the concat fragment.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('balancer_cluster')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets the Apache service')
    Markdown:'(''')
    Markdown:TEXT('s instance name.')
    WHITE_SPACE(' ')
    Markdown:TEXT('This must match the name of a declared')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancer')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('resource.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Required.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('url')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Specifies the URL used to contact the balancer member server.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Defaults to')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//${')
    Markdown::(':')
    Markdown::(':')
    Markdown:TEXT('fqdn}/')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('#####')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('options')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('An array of')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('options')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/2.2/mod/mod_proxy.html#balancermember')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('to be specified after the URL.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Accepts any key-value pairs available to')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('ProxyPass')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//httpd.apache.org/docs/2.2/mod/mod_proxy.html#proxypass')
      Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Examples')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To load balance with exported resources,')
    WHITE_SPACE(' ')
    Markdown:TEXT('export the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('balancermember')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('from the balancer member')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      @@apache::balancermember { "${::fqdn}-puppet00":')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        balancer_cluster => 'puppet00',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        url              => "ajp://${::fqdn}:8009"')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Then,')
    WHITE_SPACE(' ')
    Markdown:TEXT('on the proxy server,')
    WHITE_SPACE(' ')
    Markdown:TEXT('create the balancer cluster')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      apache::balancer { 'puppet00': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To load balance without exported resources,')
    WHITE_SPACE(' ')
    Markdown:TEXT('declare the following on the proxy')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::balancer { 'puppet00': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('    apache::balancermember { "${::fqdn}-puppet00":')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        balancer_cluster => 'puppet00',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        url              => "ajp://${::fqdn}:8009"')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        options          => ['ping=5', 'disablereuse=on', 'retry=5', 'ttl=120'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Then declare')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancer')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('balancermember')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('on the proxy server.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you need to use ProxySet in the balancer config')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      apache::balancer { 'puppet01':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        proxy_set => {'stickysession' => 'JSESSIONID'},')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('      }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Reference')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Classes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Public Classes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('apache')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#class-apache')
          Markdown:)(')')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Guides the basic setup of Apache.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('dev')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Installs Apache development libraries.')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:EMPH
          Markdown:EMPH('*')
          Markdown:TEXT('Note')
          Markdown::(':')
          Markdown:EMPH('*')
        WHITE_SPACE(' ')
        Markdown:TEXT('On FreeBSD,')
        WHITE_SPACE(' ')
        Markdown:TEXT('you must declare')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('package')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('or')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('before')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('dev')
          Markdown:BACKTICK('`')
        Markdown:TEXT('.')
        Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:CODE_SPAN
              Markdown:BACKTICK('`')
              Markdown:TEXT('apache')
              Markdown::(':')
              Markdown::(':')
              Markdown:TEXT('mod')
              Markdown::(':')
              Markdown::(':')
              Markdown:[('[')
              Markdown:TEXT('name')
              Markdown:](']')
              Markdown:BACKTICK('`')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('#classes-apachemodname')
          Markdown:)(')')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Enables specific Apache HTTPD modules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Private Classes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('confd')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('no_accf')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Creates the no-accf.conf configuration file in conf.d,')
        WHITE_SPACE(' ')
        Markdown:TEXT('required by FreeBSD')
        Markdown:'(''')
        Markdown:TEXT('s Apache 2.4.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('default_confd_files')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Includes conf.d files for FreeBSD.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('default_mods')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Installs the Apache modules required to run the default configuration.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('package')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Installs and configures basic Apache packages.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('params')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Manages Apache parameters.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('service')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Manages the Apache daemon.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Defined Types')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Public Defined Types')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('balancer')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Creates an Apache balancer cluster.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('balancermember')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Defines members of')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('mod_proxy_balancer')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//httpd.apache.org/docs/current/mod/mod_proxy_balancer.html')
          Markdown:)(')')
        Markdown:TEXT('.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('listen')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Based on the title,')
        WHITE_SPACE(' ')
        Markdown:TEXT('controls which ports Apache binds to for listening.')
        WHITE_SPACE(' ')
        Markdown:TEXT('Adds')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Listen')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//httpd.apache.org/docs/current/bind.html')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('directives to ports.conf in the Apache HTTPD configuration directory.')
        WHITE_SPACE(' ')
        Markdown:TEXT('Titles take the form')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:HTML_TAG('<port>')
        Markdown:'(''')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:HTML_TAG('<ipv4>')
        Markdown::(':')
        Markdown:HTML_TAG('<port>')
        Markdown:'(''')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:TEXT('or')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:HTML_TAG('<ipv6>')
        Markdown::(':')
        Markdown:HTML_TAG('<port>')
        Markdown:'(''')
        Markdown:TEXT('.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Used to enable arbitrary Apache HTTPD modules for which there is no specific')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('mod')
          Markdown::(':')
          Markdown::(':')
          Markdown:[('[')
          Markdown:TEXT('name')
          Markdown:](']')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('class.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('namevirtualhost')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Enables name-based hosting of a virtual host.')
        WHITE_SPACE(' ')
        Markdown:TEXT('Adds all')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('NameVirtualHost')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//httpd.apache.org/docs/current/vhosts/name-based.html')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('directives to the')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('ports.conf')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('file in the Apache HTTPD configuration directory.')
        WHITE_SPACE(' ')
        Markdown:TEXT('Titles take the form')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:TEXT('\*')
        Markdown:'(''')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:EMPH('*')
        Markdown::(':')
        Markdown:HTML_TAG('<port>')
        Markdown:'(''')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:TEXT('\_default')
        Markdown:EMPH('_')
        Markdown::(':')
        Markdown:HTML_TAG('<port>')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:HTML_TAG('<ip>')
        Markdown:'(''')
        Markdown:TEXT(',')
        WHITE_SPACE(' ')
        Markdown:TEXT('or')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:HTML_TAG('<ip>')
        Markdown::(':')
        Markdown:HTML_TAG('<port>')
        Markdown:'(''')
        Markdown:TEXT('.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('vhost')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Allows specialized configurations for virtual hosts that have requirements outside the defaults.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Private Defined Types')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('peruser')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('multiplexer')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Enables the')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Peruser')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('module for FreeBSD only.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('apache')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('peruser')
          Markdown::(':')
          Markdown::(':')
          Markdown:TEXT('processor')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('Enables the')
        WHITE_SPACE(' ')
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Peruser')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//www.freebsd.org/cgi/url.cgi?ports/www/apache22-peruser-mpm/pkg-descr')
          Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('module for FreeBSD only.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Templates')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The Apache module relies heavily on templates to enable the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('defined types.')
    WHITE_SPACE(' ')
    Markdown:TEXT('These templates are built based on Facter facts around your operating system.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Unless explicitly called out,')
    WHITE_SPACE(' ')
    Markdown:TEXT('most templates are not meant for configuration.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Limitations')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Ubuntu 10.04')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('WSGIImportScript')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter creates a statement inside the VirtualHost which is unsupported on older versions of Apache,')
    WHITE_SPACE(' ')
    Markdown:TEXT('causing this to fail.')
    WHITE_SPACE('  ')
    Markdown:TEXT('This will be remedied in a future refactoring.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###RHEL/CentOS 5')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('proxy_html')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('classes are untested since repositories are missing compatible packages.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###RHEL/CentOS 7')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class is untested as the repository does not have packages for EL7 yet.')
    WHITE_SPACE('  ')
    Markdown:TEXT('The fact that passenger packages aren')
    Markdown:'(''')
    Markdown:TEXT('t available also makes us unable to test the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('rack_base_uri')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter in')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###General')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This module is CI tested on Centos 5')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:TEXT('6,')
    WHITE_SPACE(' ')
    Markdown:TEXT('Ubuntu 12.04')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:TEXT('14.04,')
    WHITE_SPACE(' ')
    Markdown:TEXT('Debian 7,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and RHEL 5,')
    WHITE_SPACE(' ')
    Markdown:TEXT('6')
    WHITE_SPACE(' ')
    Markdown:TEXT('&')
    WHITE_SPACE(' ')
    Markdown:TEXT('7 platforms against both the OSS and Enterprise version of Puppet.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The module contains support for other distributions and operating systems,')
    WHITE_SPACE(' ')
    Markdown:TEXT('such as FreeBSD and Amazon Linux,')
    WHITE_SPACE(' ')
    Markdown:TEXT('but is not formally tested on those and regressions may occur.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###SELinux and Custom Paths')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you are running with SELinux in enforcing mode and want to use custom paths for your')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('logroot')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('mod_dir')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost_dir')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('docroot')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('you will need to manage the context for the files yourself.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Something along the lines of')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:FENCE_LANG('puppet')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        exec { 'set_apache_defaults':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          command => 'semanage fcontext -a -t httpd_sys_content_t "/custom/path(/.*)?"',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          require => Package['policycoreutils-python'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        package { 'policycoreutils-python': ensure => installed }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        exec { 'restorecon_apache':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          command => 'restorecon -Rv /apache_spec',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          path    => '/bin:/usr/bin/:/sbin:/usr/sbin',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          before  => Service['httpd'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          require => Class['apache'],')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        class { 'apache': }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        host { 'test.server': ip => '127.0.0.1' }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        file { '/custom/path': ensure => directory, }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        file { '/custom/path/include': ensure => present, content => '#additional_includes' }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        apache::vhost { 'test.server':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          docroot             => '/custom/path',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('          additional_includes => '/custom/path/include',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('        }')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('You need to set the contexts using')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('semanage fcontext')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('not')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('chcon')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('because')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('file')
      WHITE_SPACE(' ')
      Markdown:TEXT('{...}')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('resources will reset the context to the values in the database if the resource isn')
    Markdown:'(''')
    Markdown:TEXT('t specifying the context.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##Development')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Contributing')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Puppet Labs modules on the Puppet Forge are open projects,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and community contributions are essential for keeping them great.')
    WHITE_SPACE(' ')
    Markdown:TEXT('We can’t access the huge number of platforms and myriad of hardware,')
    WHITE_SPACE(' ')
    Markdown:TEXT('software,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and deployment configurations that Puppet is intended to serve.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('We want to keep it as easy as possible to contribute changes so that our modules work in your environment.')
    WHITE_SPACE(' ')
    Markdown:TEXT('There are a few guidelines that we need contributors to follow so that we can have a chance of keeping on top of things.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('You can read the complete module contribution guide')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('on the Puppet Labs wiki.')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//projects.puppetlabs.com/projects/module-site/wiki/Module_contributing')
      Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Running tests')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This project contains tests for both')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('rspec-puppet')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//rspec-puppet.com/')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('beaker-rspec')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//github.com/puppetlabs/beaker-rspec')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('to verify functionality.')
    WHITE_SPACE(' ')
    Markdown:TEXT('For in-depth information please see their respective documentation.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Quickstart')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_BLOCK
    Markdown:CODE_LINE('    gem install bundler')
    Markdown:EOL('\n')
    Markdown:CODE_LINE('    bundle install')
    Markdown:EOL('\n')
    Markdown:CODE_LINE('    bundle exec rake spec')
    Markdown:EOL('\n')
    Markdown:CODE_LINE('    bundle exec rspec spec/acceptance')
    Markdown:EOL('\n')
    Markdown:CODE_LINE('    RS_DEBUG=yes bundle exec rspec spec/acceptance')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_1
    Markdown:ATX_HEADER('#')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Passenger')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Just enabling the Passenger module is insufficient for the use of Passenger in production.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Passenger should be tunable to better fit the environment in which it is run while being aware of the resources it required.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('To this end the Apache passenger module has been modified to apply system wide Passenger tuning declarations to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('passenger.conf')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Declarations specific to a virtual host should be passed through when defining a')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('e.g.')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('rack_base_uris')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameter on the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('vhost')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('class,')
    WHITE_SPACE(' ')
    Markdown:TEXT('check')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('README.md')
      Markdown:BACKTICK('`')
    Markdown:)(')')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Also,')
    WHITE_SPACE(' ')
    Markdown:TEXT('general apache module loading parameters can be supplied to enable using a customized passenger module in place of a default-package-based version of the module.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_1
    Markdown:ATX_HEADER('#')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Parameters for')
      WHITE_SPACE(' ')
      Markdown:CODE_SPAN
        Markdown:BACKTICK('`')
        Markdown:TEXT('apache')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('mod')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('passenger')
        Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The following declarations are supported and can be passed to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('as parameters,')
    WHITE_SPACE(' ')
    Markdown:TEXT('for example')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:CODE_FENCE
    Markdown:CODE_FENCE_START('```')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('class {'apache::mod::passenger':')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  passenger_high_performance  => 'on',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  rails_autodetect            => 'off',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('  mod_lib_path                => '/usr/lib/apache2/custom_modules',')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_CONTENT('}')
    Markdown:EOL('\n')
    Markdown:CODE_FENCE_END('```')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The general form is using the all lower case version of the declaration.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_2
    Markdown:ATX_HEADER('##')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Parameters used with passenger.conf')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('If you pass a default value to')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('passenger')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('it will be ignored and not passed through to the configuration file.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_high_performance')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Default is')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('off')
      Markdown:BACKTICK('`')
    Markdown:TEXT(',')
    WHITE_SPACE(' ')
    Markdown:TEXT('when turned')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('on')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('Passenger runs in a higher performance mode that can be less compatible with other Apache modules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerHighPerformance')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_max_pool_size')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Set')
    Markdown:'(''')
    Markdown:TEXT('s the maximum number of Passenger application processes that may simultaneously run.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default value is 6.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#')
    Markdown:EMPH('_')
    Markdown:TEXT('passengermaxpoolsize_lt_integer_gt')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_pool_idle_time')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The maximum number of seconds a Passenger Application process will be allowed to remain idle before being shut down.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default value is 300.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerPoolIdleTime')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_max_requests')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The maximum number of request a Passenger application will process before being restarted.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default value is 0,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which indicates that a process will only shut down if the Pool Idle Time')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('see above')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('expires.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#PassengerMaxRequests')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_stat_throttle_rate')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Sets how often Passenger performs file system checks,')
    WHITE_SPACE(' ')
    Markdown:TEXT('at most once every')
    WHITE_SPACE(' ')
    Markdown:EMPH
      Markdown:EMPH('_')
      Markdown:TEXT('x')
      Markdown:EMPH('_')
    WHITE_SPACE(' ')
    Markdown:TEXT('seconds.')
    WHITE_SPACE(' ')
    Markdown:TEXT('Default is 0,')
    WHITE_SPACE(' ')
    Markdown:TEXT('which means the checks are performed with every request.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#')
    Markdown:EMPH('_')
    Markdown:TEXT('passengerstatthrottlerate_lt_integer_gt')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('rack_autodetect')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Should Passenger automatically detect if the document root of a virtual host is a Rack application.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('on')
      Markdown:BACKTICK('`')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#')
    Markdown:EMPH('_')
    Markdown:TEXT('rackautodetect_lt_on_off_gt')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('rails_autodetect')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Should Passenger automatically detect if the document root of a virtual host is a Rails application.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is on.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.modrails.com/documentation/Users%20guide%20Apache.html#')
    Markdown:EMPH('_')
    Markdown:TEXT('railsautodetect_lt_on_off_gt')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('passenger_use_global_queue')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows toggling of PassengerUseGlobalQueue.')
    WHITE_SPACE('  ')
    Markdown:TEXT('NOTE')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:TEXT('PassengerUseGlobalQueue is the default in Passenger 4.x and the versions')
    WHITE_SPACE(' ')
    Markdown:>('>')
    Markdown:TEXT('=')
    WHITE_SPACE(' ')
    Markdown:TEXT('4.x have disabled this configuration option altogether.')
    WHITE_SPACE('  ')
    Markdown:TEXT('Use with caution.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_2
    Markdown:ATX_HEADER('##')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Parameters used to load the module')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Unlike the tuning parameters specified above,')
    WHITE_SPACE(' ')
    Markdown:TEXT('the following parameters are only used when loading customized passenger modules.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_package')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the default package name used for the passenger module package.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_package_ensure')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the package installation setting used by puppet when installing the passenger module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('present')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_id')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the value used by apache to identify the passenger module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('passenger_module')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_lib_path')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the directory path used by apache when loading the passenger module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is the value of')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('$apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('params')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('lib_path')
      Markdown:BACKTICK('`')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_lib')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the library file name used by apache when loading the passenger module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is')
    WHITE_SPACE(' ')
    Markdown:'(''')
    Markdown:TEXT('mod_passenger.so')
    Markdown:'(''')
    Markdown:TEXT('.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_3
    Markdown:ATX_HEADER('###')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('mod_path')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Allows overriding the full path to the library file used by apache when loading the passenger module.')
    WHITE_SPACE(' ')
    Markdown:TEXT('The default is the concatenation of the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('mod_lib_path')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('and')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('mod_lib')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('parameters.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_1
    Markdown:ATX_HEADER('#')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Dependencies')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('RedHat-based systems will need to configure additional package repositories in order to install Passenger,')
    WHITE_SPACE(' ')
    Markdown:TEXT('specifically')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Extra Packages for Enterprise Linux')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('https')
            Markdown::(':')
            Markdown:TEXT('//fedoraproject.org/wiki/EPEL')
          Markdown:)(')')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:INLINE_LINK
          Markdown:LINK_TEXT
            Markdown:[('[')
            Markdown:TEXT('Phusion Passenger')
            Markdown:](']')
          Markdown:(('(')
          Markdown:LINK_DESTINATION
            Markdown:TEXT('http')
            Markdown::(':')
            Markdown:TEXT('//passenger.stealthymonkeys.com')
          Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Configuration of these repositories is beyond the scope of this module and is left to the user.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_1
    Markdown:ATX_HEADER('#')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Attribution')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('The Passenger tuning parameters for the')
    WHITE_SPACE(' ')
    Markdown:CODE_SPAN
      Markdown:BACKTICK('`')
      Markdown:TEXT('apache')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('mod')
      Markdown::(':')
      Markdown::(':')
      Markdown:TEXT('puppet')
      Markdown:BACKTICK('`')
    WHITE_SPACE(' ')
    Markdown:TEXT('Puppet class was modified by Aaron Hicks')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('hicksa@landcareresearch.co.nz')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('for work on the NeSI Project and the Tuakiri New Zealand Access Federation as a fork from the PuppetLabs Apache module on GitHub.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//github.com/puppetlabs/puppetlabs-apache')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//github.com/nesi/puppetlabs-apache')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('http')
        Markdown::(':')
        Markdown:TEXT('//www.nesi.org.nz//')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//tuakiri.ac.nz/confluence/display/Tuakiri/Home')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:ATX_1
    Markdown:ATX_HEADER('#')
    Markdown:ATX_CONTENT
      WHITE_SPACE(' ')
      Markdown:TEXT('Copyright and License')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Copyright')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('C')
    Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('2012')
    WHITE_SPACE(' ')
    Markdown:INLINE_LINK
      Markdown:LINK_TEXT
        Markdown:[('[')
        Markdown:TEXT('Puppet Labs')
        Markdown:](']')
      Markdown:(('(')
      Markdown:LINK_DESTINATION
        Markdown:TEXT('https')
        Markdown::(':')
        Markdown:TEXT('//www.puppetlabs.com/')
      Markdown:)(')')
    WHITE_SPACE(' ')
    Markdown:TEXT('Inc')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Puppet Labs can be contacted at')
    Markdown::(':')
    WHITE_SPACE(' ')
    Markdown:TEXT('info@puppetlabs.com')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Licensed under the Apache License,')
    WHITE_SPACE(' ')
    Markdown:TEXT('Version 2.0')
    WHITE_SPACE(' ')
    Markdown:(('(')
    Markdown:TEXT('the')
    WHITE_SPACE(' ')
    Markdown:"('"')
    Markdown:TEXT('License')
    Markdown:"('"')
    Markdown:)(')')
    Markdown:TEXT(';')
    Markdown:EOL('\n')
    Markdown:TEXT('you may not use this file except in compliance with the License.')
    Markdown:EOL('\n')
    Markdown:TEXT('You may obtain a copy of the License at')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    WHITE_SPACE('  ')
    Markdown:TEXT('http')
    Markdown::(':')
    Markdown:TEXT('//www.apache.org/licenses/LICENSE-2.0')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Unless required by applicable law or agreed to in writing,')
    WHITE_SPACE(' ')
    Markdown:TEXT('software')
    Markdown:EOL('\n')
    Markdown:TEXT('distributed under the License is distributed on an')
    WHITE_SPACE(' ')
    Markdown:"('"')
    Markdown:TEXT('AS IS')
    Markdown:"('"')
    WHITE_SPACE(' ')
    Markdown:TEXT('BASIS,')
    Markdown:EOL('\n')
    Markdown:TEXT('WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,')
    WHITE_SPACE(' ')
    Markdown:TEXT('either express or implied.')
    Markdown:EOL('\n')
    Markdown:TEXT('See the License for the specific language governing permissions and')
    Markdown:EOL('\n')
    Markdown:TEXT('limitations under the License.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##2014-06-25')
    WHITE_SPACE(' ')
    Markdown:TEXT('-')
    WHITE_SPACE(' ')
    Markdown:TEXT('Supported Release 1.0.4')
    Markdown:EOL('\n')
    Markdown:TEXT('###Summary')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This release has test fixes.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Features')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Added test support for OSX.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Bugfixes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Known bugs')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Not supported on Windows.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##2014-06-04')
    WHITE_SPACE(' ')
    Markdown:TEXT('-')
    WHITE_SPACE(' ')
    Markdown:TEXT('Release 1.0.3')
    Markdown:EOL('\n')
    Markdown:TEXT('###Summary')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This release adds compatibility for PE3.3 and fixes tests.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Features')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Added test support for Ubuntu Trusty.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Bugfixes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Known bugs')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:EMPH('*')
    Markdown:TEXT('Not supported on Windows.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##2014-03-04')
    WHITE_SPACE(' ')
    Markdown:TEXT('-')
    WHITE_SPACE(' ')
    Markdown:TEXT('Supported Release 1.0.2')
    Markdown:EOL('\n')
    Markdown:TEXT('###Summary')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('This is a supported release.')
    WHITE_SPACE(' ')
    Markdown:TEXT('No functional changes were made from 1.0.1.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Features')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Huge amount of tests backported from 1.1.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Documentation rewrite.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Bugfixes')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Known Bugs')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('* ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Not supported on Windows.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##2014-02-12')
    WHITE_SPACE(' ')
    Markdown:TEXT('-')
    WHITE_SPACE(' ')
    Markdown:TEXT('1.0.1')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Summary')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Minor bugfixes for sorting of fragments and ordering of resources.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Bugfixes')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('LANG')
        WHITE_SPACE(' ')
        Markdown:TEXT('=')
        Markdown:>('>')
        WHITE_SPACE(' ')
        Markdown:TEXT('C replaced with LC_ALL')
        WHITE_SPACE(' ')
        Markdown:TEXT('=')
        Markdown:>('>')
        WHITE_SPACE(' ')
        Markdown:TEXT('C to reduce spurious recreation of')
        Markdown:EOL('\n')
        Markdown:TEXT('fragments.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Corrected pluginsync documentation.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Ensure concat')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('setup always runs before fragments.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('##2013-08-09')
    WHITE_SPACE(' ')
    Markdown:TEXT('-')
    WHITE_SPACE(' ')
    Markdown:TEXT('1.0.0')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('###Summary')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('Many new features and bugfixes in this release,')
    WHITE_SPACE(' ')
    Markdown:TEXT('and if you')
    Markdown:'(''')
    Markdown:TEXT('re a heavy concat')
    Markdown:EOL('\n')
    Markdown:TEXT('user you should test carefully before upgrading.')
    WHITE_SPACE('  ')
    Markdown:TEXT('The features should all be')
    Markdown:EOL('\n')
    Markdown:TEXT('backwards compatible but only light testing has been done from our side before')
    Markdown:EOL('\n')
    Markdown:TEXT('this release.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Features')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('New parameters in concat')
        Markdown::(':')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET(' - ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('replace')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('specify if concat should replace existing files.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET(' - ')
      Markdown:PARAGRAPH
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('ensure_newline')
          Markdown:BACKTICK('`')
        Markdown::(':')
        WHITE_SPACE(' ')
        Markdown:TEXT('controls if fragments should contain a newline at the end.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Improved README documentation.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Add rspec')
        Markdown::(':')
        Markdown:TEXT('system tests')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('rake spec')
        Markdown::(':')
        Markdown:TEXT('system to test concat')
        Markdown:)(')')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####Bugfixes')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Gracefully handle')
        WHITE_SPACE(' ')
        Markdown:TEXT('\n in a fragment resource name.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Adding more helpful message for')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:TEXT('pluginsync')
        WHITE_SPACE(' ')
        Markdown:TEXT('=')
        WHITE_SPACE(' ')
        Markdown:TEXT('true')
        Markdown:'(''')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Allow passing')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('source')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('and')
        WHITE_SPACE(' ')
        Markdown:CODE_SPAN
          Markdown:BACKTICK('`')
          Markdown:TEXT('content')
          Markdown:BACKTICK('`')
        WHITE_SPACE(' ')
        Markdown:TEXT('directly to file resource,')
        WHITE_SPACE(' ')
        Markdown:TEXT('rather than')
        Markdown:EOL('\n')
        Markdown:TEXT('defining resource defaults.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Added')
        WHITE_SPACE(' ')
        Markdown:TEXT('-r flag to read so that filenames with')
        WHITE_SPACE(' ')
        Markdown:TEXT('\')
        WHITE_SPACE(' ')
        Markdown:TEXT('will be read correctly.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('sort always uses LANG=C.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Allow WARNMSG to contain/start with')
        WHITE_SPACE(' ')
        Markdown:'(''')
        Markdown:TEXT('#')
        Markdown:'(''')
        Markdown:TEXT('.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('Replace while-read pattern with for-do in order to support Solaris.')
  Markdown:EOL('\n')
  Markdown:EOL('\n')
  Markdown:PARAGRAPH
    Markdown:TEXT('####CHANGELOG')
    Markdown::(':')
  Markdown:EOL('\n')
  Markdown:UNORDERED_LIST
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/02/19')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('initial release')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/03/12')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('add support for 0.24.8 and newer')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('make the location of sort configurable')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('add the ability to add shell comment based warnings to')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('top of files')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('add the ablity to create empty files')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/04/05')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('fix parsing of WARN and change code style to match rest')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('of the code')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Better and safer boolean handling for warn and force')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Don')
        Markdown:'(''')
        Markdown:TEXT('t use hard coded paths in the shell script,')
        WHITE_SPACE(' ')
        Markdown:TEXT('set PATH')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('top of the script')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Use file{}')
        WHITE_SPACE(' ')
        Markdown:TEXT('to copy the result and make all fragments owned')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('by root.')
        WHITE_SPACE('  ')
        Markdown:TEXT('This means we can chnage the ownership/group of the')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('resulting file at any time.')
        Markdown:EOL('\n')
        WHITE_SPACE('             ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('You can specify ensure')
        WHITE_SPACE(' ')
        Markdown:TEXT('=')
        Markdown:>('>')
        WHITE_SPACE(' ')
        Markdown:"('"')
        Markdown:TEXT('/some/other/file')
        Markdown:"('"')
        WHITE_SPACE(' ')
        Markdown:TEXT('in concat')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('fragment')
        Markdown:EOL('\n')
        WHITE_SPACE('               ')
        Markdown:TEXT('to include the contents of a symlink into the final file.')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/04/16')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Add more cleaning of the fragment name')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('removing')
        WHITE_SPACE(' ')
        Markdown:TEXT('/')
        WHITE_SPACE(' ')
        Markdown:TEXT('from the')
        WHITE_SPACE(' ')
        Markdown:TEXT('$name')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/05/22')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Improve documentation and show the use of ensure')
        WHITE_SPACE(' ')
        Markdown:TEXT('=')
        Markdown:>('>')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/07/14')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Add support for setting the filebucket behavior of files')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/10/04')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Make the warning message configurable')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2010/12/03')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Add flags to make concat work better on Solaris')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('thanks Jonathan Boyett')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/02/03')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Make the shell script more portable and add a config option for root group')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/06/21')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Make base dir root readable only for security')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/06/23')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Set base directory using a fact instead of hardcoding it')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/06/23')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Support operating as non privileged user')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/06/23')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Support dash instead of bash or sh')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/07/11')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Better solaris support')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/12/05')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Use fully qualified variables')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2011/12/13')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Improve Nexenta support')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/04/11')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Do not use any GNU specific extensions in the shell script')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/03/24')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Comply to community style guides')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/05/23')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Better errors when basedir isnt set')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/05/31')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Add spec tests')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/07/11')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Include concat')
        Markdown::(':')
        Markdown::(':')
        Markdown:TEXT('setup in concat improving UX')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/08/14')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Puppet Lint improvements')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/08/30')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('The target path can be different from the')
        WHITE_SPACE(' ')
        Markdown:TEXT('$name')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/08/30')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('More Puppet Lint cleanup')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/09/04')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('RELEASE 0.2.0')
    Markdown:EOL('\n')
    Markdown:LIST_ITEM
      Markdown:LIST_BULLET('- ')
      Markdown:PARAGRAPH
        Markdown:TEXT('2012/12/12')
        WHITE_SPACE(' ')
        Markdown:TEXT('-')
        WHITE_SPACE(' ')
        Markdown:TEXT('Added')
        WHITE_SPACE(' ')
        Markdown:(('(')
        Markdown:TEXT('file')
        Markdown:)(')')
        WHITE_SPACE(' ')
        Markdown:TEXT('$replace parameter to concat')
  Markdown:EOL('\n')