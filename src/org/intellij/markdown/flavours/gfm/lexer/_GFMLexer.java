/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package org.intellij.markdown.flavours.gfm.lexer;

import org.intellij.markdown.MarkdownTokenTypes;
import org.intellij.markdown.flavours.gfm.GFMTokenTypes;
import org.intellij.markdown.IElementType;
import org.intellij.markdown.lexer.GeneratedLexer;

import java.util.HashSet;
import java.util.Set;
import java.util.Stack;

/* Auto generated File */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>gfm.flex</tt>
 */
public class _GFMLexer implements GeneratedLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int TAG_START = 2;
  public static final int AFTER_LINE_START = 4;
  public static final int PARSE_DELIMITED = 6;
  public static final int CODE = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  1, 1
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [9, 6, 6]
   * Total runtime size is 1568 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>12]|((ch>>6)&0x3f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 272 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\100\1\200\u010d\100");

  /* The ZZ_CMAP_Y table has 192 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\175\3\1\4\77\3");

  /* The ZZ_CMAP_A table has 320 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\3\1\6\1\4\1\5\1\7\22\0\1\3\1\14\1\10\1\52\1\53\2\51\1\12\2\56\1\54"+
    "\1\51\1\50\1\15\1\36\1\33\12\1\1\27\1\0\1\13\1\32\1\16\1\17\1\35\1\24\1\20"+
    "\1\22\1\23\17\20\1\25\6\20\1\21\1\11\1\26\1\34\1\30\1\31\4\2\1\46\1\43\1\2"+
    "\1\37\1\44\2\2\1\45\3\2\1\41\2\2\1\42\1\40\2\2\1\47\3\2\1\53\1\34\1\53\1\55"+
    "\6\0\1\4\242\0\2\4\26\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\6\0\3\1\1\2\2\3\1\4\1\5\1\6\1\3"+
    "\1\6\1\7\1\10\1\11\1\12\3\3\1\13\2\14"+
    "\1\1\2\14\3\0\1\1\3\0\2\15\1\16\1\17"+
    "\5\0\4\3\7\0\1\1\3\3\1\16\3\0\1\20"+
    "\11\0\4\3\5\0\1\1\4\3\12\0\1\3\5\0"+
    "\4\3\2\0\1\21\2\0\1\22\3\0\1\20\5\0"+
    "\1\21\7\0\1\3\15\0\1\23\2\0\2\23\16\0"+
    "\1\21\12\0\1\24\2\0\2\24\12\0\2\23\12\0"+
    "\1\20\2\0\1\20\7\0\2\24\65\0\1\20\u0172\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[640];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\57\0\136\0\215\0\274\0\353\0\u011a\0\u0149"+
    "\0\u0178\0\u011a\0\u011a\0\u01a7\0\u01d6\0\u0205\0\u011a\0\u0234"+
    "\0\u0263\0\u011a\0\u011a\0\u011a\0\u0292\0\u02c1\0\u02f0\0\u031f"+
    "\0\u011a\0\u011a\0\u034e\0\u034e\0\u037d\0\u0263\0\u03ac\0\u03db"+
    "\0\u040a\0\u040a\0\u0439\0\u0468\0\u0497\0\u011a\0\u04c6\0\u011a"+
    "\0\u04f5\0\u0524\0\u0553\0\u0582\0\u05b1\0\u05e0\0\u060f\0\u063e"+
    "\0\u066d\0\u069c\0\u034e\0\u06cb\0\u06fa\0\u0729\0\u0758\0\u0787"+
    "\0\u07b6\0\u07b6\0\u07e5\0\u0814\0\u0843\0\u0497\0\u0872\0\u08a1"+
    "\0\u08d0\0\u011a\0\u08ff\0\u092e\0\u095d\0\u098c\0\u09bb\0\u09ea"+
    "\0\u0a19\0\u0a48\0\u0a77\0\u0aa6\0\u0ad5\0\u0b04\0\u0b33\0\u0b62"+
    "\0\u0b91\0\u0bc0\0\u0bef\0\u0c1e\0\u0c1e\0\u0c4d\0\u0c7c\0\u0cab"+
    "\0\u0cda\0\u0d09\0\u0d38\0\u0d67\0\u0d96\0\u0dc5\0\u0df4\0\u0e23"+
    "\0\u0e52\0\u0e81\0\u0eb0\0\u0edf\0\u0f0e\0\u0f3d\0\u0f6c\0\u0f9b"+
    "\0\u0fca\0\u0ff9\0\u1028\0\u1057\0\u1086\0\u10b5\0\u10e4\0\u011a"+
    "\0\u1113\0\u1142\0\u011a\0\u1171\0\u11a0\0\u11cf\0\u1171\0\u11fe"+
    "\0\u122d\0\u125c\0\u128b\0\u12ba\0\u09ea\0\u12e9\0\u1318\0\u1347"+
    "\0\u1376\0\u13a5\0\u13d4\0\u1403\0\u1432\0\u1461\0\u1490\0\u14bf"+
    "\0\u14ee\0\u151d\0\u154c\0\u157b\0\u15aa\0\u15d9\0\u1608\0\u1637"+
    "\0\u1666\0\u1695\0\u1318\0\u16c4\0\u16f3\0\u1722\0\u011a\0\u1751"+
    "\0\u1780\0\u17af\0\u17de\0\u180d\0\u183c\0\u186b\0\u189a\0\u18c9"+
    "\0\u18f8\0\u1927\0\u1956\0\u1985\0\u19b4\0\u1171\0\u19e3\0\u1a12"+
    "\0\u1a41\0\u1a70\0\u1a9f\0\u1ace\0\u1afd\0\u1b2c\0\u1b5b\0\u1b8a"+
    "\0\u186b\0\u1bb9\0\u1be8\0\u1c17\0\u011a\0\u1c46\0\u1c75\0\u1ca4"+
    "\0\u1cd3\0\u1d02\0\u1d31\0\u1d60\0\u1d8f\0\u1dbe\0\u1ded\0\u1a70"+
    "\0\u1a9f\0\u1e1c\0\u1e4b\0\u1b8a\0\u1e7a\0\u1ea9\0\u1ed8\0\u1f07"+
    "\0\u1f36\0\u1f65\0\u1f94\0\u154c\0\u1fc3\0\u1ff2\0\u157b\0\u2021"+
    "\0\u2050\0\u207f\0\u20ae\0\u20dd\0\u210c\0\u213b\0\u1ed8\0\u1f07"+
    "\0\u216a\0\u2199\0\u21c8\0\u21f7\0\u2226\0\u2255\0\u2284\0\u22b3"+
    "\0\u22e2\0\u2311\0\u2340\0\u236f\0\u239e\0\u23cd\0\u23fc\0\u242b"+
    "\0\u245a\0\u2489\0\u24b8\0\u24e7\0\u2516\0\u2545\0\u2574\0\u25a3"+
    "\0\u25d2\0\u2601\0\u2630\0\u265f\0\u268e\0\u26bd\0\u26ec\0\u271b"+
    "\0\u274a\0\u2779\0\u27a8\0\u27d7\0\u2806\0\u2835\0\u2864\0\u2893"+
    "\0\u28c2\0\u28f1\0\u2920\0\u294f\0\u297e\0\u29ad\0\u29dc\0\u2a0b"+
    "\0\u2a3a\0\u2a69\0\u2a98\0\u2ac7\0\u2af6\0\u2630\0\u2b25\0\u2b54"+
    "\0\u2b83\0\u2bb2\0\u2be1\0\u2c10\0\u2c3f\0\u2c6e\0\u2c9d\0\u2ccc"+
    "\0\u2cfb\0\u2d2a\0\u2d59\0\u2d88\0\u2db7\0\u2de6\0\u2e15\0\u2e44"+
    "\0\u2e73\0\u2ea2\0\u2ed1\0\u2f00\0\u2f2f\0\u2f5e\0\u2f8d\0\u2fbc"+
    "\0\u2feb\0\u301a\0\u3049\0\u3078\0\u30a7\0\u30d6\0\u3105\0\u3134"+
    "\0\u3163\0\u3192\0\u31c1\0\u31f0\0\u321f\0\u324e\0\u327d\0\u32ac"+
    "\0\u32db\0\u330a\0\u3339\0\u3368\0\u3397\0\u33c6\0\u33f5\0\u3424"+
    "\0\u3453\0\u3482\0\u34b1\0\u34e0\0\u350f\0\u353e\0\u356d\0\u359c"+
    "\0\u35cb\0\u35fa\0\u3629\0\u3658\0\u3687\0\u36b6\0\u36e5\0\u3714"+
    "\0\u3743\0\u3772\0\u37a1\0\u37d0\0\u37ff\0\u382e\0\u385d\0\u388c"+
    "\0\u38bb\0\u38ea\0\u3919\0\u3948\0\u3977\0\u39a6\0\u39d5\0\u3a04"+
    "\0\u3a33\0\u3a62\0\u3a91\0\u3ac0\0\u3aef\0\u3b1e\0\u3b4d\0\u3b7c"+
    "\0\u3bab\0\u3bda\0\u3c09\0\u3c38\0\u3c67\0\u3c96\0\u3cc5\0\u3cf4"+
    "\0\u3d23\0\u3d52\0\u3d81\0\u3db0\0\u3ddf\0\u3e0e\0\u3e3d\0\u3e6c"+
    "\0\u3e9b\0\u3eca\0\u3ef9\0\u3f28\0\u3f57\0\u3f86\0\u3fb5\0\u3fe4"+
    "\0\u4013\0\u4042\0\u4071\0\u40a0\0\u40cf\0\u40fe\0\u412d\0\u415c"+
    "\0\u418b\0\u41ba\0\u41e9\0\u4218\0\u4247\0\u4276\0\u42a5\0\u42d4"+
    "\0\u4303\0\u4332\0\u4361\0\u4390\0\u43bf\0\u43ee\0\u441d\0\u444c"+
    "\0\u447b\0\u44aa\0\u44d9\0\u4508\0\u4537\0\u4566\0\u4595\0\u45c4"+
    "\0\u45f3\0\u4622\0\u4651\0\u4680\0\u46af\0\u46de\0\u470d\0\u473c"+
    "\0\u476b\0\u479a\0\u47c9\0\u47f8\0\u4827\0\u4856\0\u4885\0\u48b4"+
    "\0\u48e3\0\u4912\0\u4941\0\u4970\0\u499f\0\u49ce\0\u49fd\0\u4a2c"+
    "\0\u4a5b\0\u4a8a\0\u4ab9\0\u4ae8\0\u4b17\0\u4b46\0\u4b75\0\u4ba4"+
    "\0\u4bd3\0\u4c02\0\u4c31\0\u4c60\0\u4c8f\0\u4cbe\0\u4ced\0\u4d1c"+
    "\0\u4d4b\0\u4d7a\0\u4da9\0\u4dd8\0\u4e07\0\u4e36\0\u4e65\0\u4e94"+
    "\0\u4ec3\0\u4ef2\0\u4f21\0\u4f50\0\u4f7f\0\u4fae\0\u4fdd\0\u500c"+
    "\0\u503b\0\u506a\0\u5099\0\u50c8\0\u50f7\0\u5126\0\u5155\0\u5184"+
    "\0\u51b3\0\u51e2\0\u5211\0\u5240\0\u526f\0\u529e\0\u52cd\0\u52fc"+
    "\0\u532b\0\u535a\0\u5389\0\u53b8\0\u53e7\0\u5416\0\u5445\0\u5474"+
    "\0\u54a3\0\u54d2\0\u5501\0\u5530\0\u555f\0\u558e\0\u55bd\0\u55ec"+
    "\0\u561b\0\u564a\0\u5679\0\u56a8\0\u56d7\0\u5706\0\u5735\0\u5764"+
    "\0\u5793\0\u57c2\0\u57f1\0\u5820\0\u584f\0\u587e\0\u58ad\0\u58dc"+
    "\0\u590b\0\u593a\0\u5969\0\u5998\0\u59c7\0\u59f6\0\u5a25\0\u5a54"+
    "\0\u5a83\0\u5ab2\0\u5ae1\0\u5b10\0\u5b3f\0\u5b6e\0\u5b9d\0\u5bcc"+
    "\0\u5bfb\0\u5c2a\0\u5c59\0\u5c88\0\u5cb7\0\u5ce6\0\u5d15\0\u5d44"+
    "\0\u5d73\0\u5da2\0\u5dd1\0\u5e00\0\u5e2f\0\u5e5e\0\u5e8d\0\u5ebc"+
    "\0\u5eeb\0\u5f1a\0\u5f49\0\u5f78\0\u5fa7\0\u5fd6\0\u6005\0\u6034"+
    "\0\u6063\0\u6092\0\u60c1\0\u60f0\0\u611f\0\u614e\0\u617d\0\u61ac"+
    "\0\u61db\0\u620a\0\u6239\0\u6268\0\u6297\0\u62c6\0\u62f5\0\u6324"+
    "\0\u6353\0\u6382\0\u63b1\0\u63e0\0\u640f\0\u643e\0\u646d\0\u649c"+
    "\0\u64cb\0\u64fa\0\u6529\0\u6558\0\u6587\0\u65b6\0\u65e5\0\u6614"+
    "\0\u6643\0\u6672\0\u66a1\0\u66d0\0\u66ff\0\u672e\0\u675d\0\u678c"+
    "\0\u67bb\0\u67ea\0\u6819\0\u6848\0\u6877\0\u68a6\0\u68d5\0\u6904"+
    "\0\u6933\0\u6962\0\u6991\0\u69c0\0\u69ef\0\u6a1e\0\u6a4d\0\u6a7c"+
    "\0\u6aab\0\u6ada\0\u6b09\0\u6b38\0\u6b67\0\u6b96\0\u6bc5\0\u6bf4"+
    "\0\u6c23\0\u6c52\0\u6c81\0\u6cb0\0\u6cdf\0\u6d0e\0\u6d3d\0\u6d6c"+
    "\0\u6d9b\0\u6dca\0\u6df9\0\u6e28\0\u6e57\0\u6e86\0\u6eb5\0\u6ee4";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[640];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\3\7\1\10\1\7\1\10\1\7\1\11\6\7\1\12"+
    "\40\7\60\13\2\14\1\15\1\16\1\15\2\16\1\17"+
    "\1\20\1\17\1\21\1\22\1\13\1\17\1\13\1\14"+
    "\1\17\4\14\1\17\1\23\1\24\1\25\5\13\1\26"+
    "\3\14\1\27\3\14\1\30\4\13\1\24\1\31\1\17"+
    "\3\32\1\33\1\7\1\34\1\7\1\11\1\32\1\35"+
    "\1\32\1\36\14\32\1\24\1\25\22\32\1\24\1\31"+
    "\1\32\1\0\2\37\15\0\1\37\1\0\4\37\11\0"+
    "\11\37\10\0\2\40\15\0\1\40\1\0\4\40\5\0"+
    "\1\40\3\0\11\40\2\0\1\40\66\0\1\41\1\7"+
    "\1\42\1\7\1\11\6\0\1\12\46\0\1\7\51\0"+
    "\2\14\1\43\1\0\1\43\12\0\1\14\1\0\4\14"+
    "\2\0\1\44\6\0\11\14\12\0\1\15\1\16\1\15"+
    "\2\16\20\0\1\45\23\0\1\45\5\0\5\16\53\0"+
    "\3\46\1\47\7\50\2\0\1\50\4\0\3\50\1\51"+
    "\1\0\1\50\1\0\2\50\11\0\7\50\1\0\1\52"+
    "\1\53\7\0\1\52\1\0\1\54\1\52\1\0\1\55"+
    "\1\53\1\0\4\53\2\0\3\52\1\56\1\52\1\0"+
    "\1\52\11\53\1\0\5\52\32\0\1\25\26\0\2\14"+
    "\1\43\1\0\1\43\12\0\1\14\1\0\4\14\2\0"+
    "\1\44\6\0\1\14\1\57\7\14\10\0\2\14\1\43"+
    "\1\0\1\43\12\0\1\14\1\0\4\14\2\0\1\44"+
    "\6\0\1\14\1\60\3\14\1\61\3\14\10\0\2\14"+
    "\1\43\1\0\1\43\12\0\1\14\1\0\4\14\2\0"+
    "\1\44\6\0\10\14\1\62\12\0\1\63\1\0\1\63"+
    "\22\0\1\45\23\0\1\45\12\0\7\50\2\0\1\50"+
    "\4\0\3\50\1\51\1\0\1\50\1\0\2\50\11\0"+
    "\7\50\1\0\2\37\1\64\1\0\1\64\12\0\1\37"+
    "\1\0\4\37\2\0\1\65\6\0\11\37\10\0\1\66"+
    "\1\67\11\0\2\70\1\0\1\70\1\67\1\0\4\67"+
    "\2\0\1\70\1\0\1\70\3\0\1\70\11\67\3\70"+
    "\3\0\1\70\3\0\1\71\1\7\1\72\1\7\1\11"+
    "\6\0\1\12\41\0\2\14\1\43\1\0\1\43\12\0"+
    "\1\14\1\0\4\14\11\0\1\73\3\14\1\74\3\14"+
    "\1\75\10\0\2\14\15\0\1\14\1\0\4\14\2\0"+
    "\1\44\6\0\11\14\12\0\1\76\1\0\1\76\57\0"+
    "\1\46\101\0\1\51\26\0\2\52\7\0\1\52\1\0"+
    "\2\52\1\0\2\52\1\0\4\52\2\0\5\52\1\77"+
    "\12\52\1\0\5\52\2\0\1\100\1\53\1\101\1\0"+
    "\1\101\4\0\1\52\1\0\2\52\1\102\1\52\1\53"+
    "\1\0\4\53\1\0\1\103\3\52\1\104\1\52\1\77"+
    "\1\52\11\53\1\0\5\52\2\0\2\52\7\0\1\52"+
    "\1\0\1\52\1\105\1\0\1\52\1\106\1\107\4\106"+
    "\2\0\5\52\1\77\12\52\1\0\5\52\1\0\1\110"+
    "\2\55\7\110\1\55\1\110\2\55\1\110\1\111\1\55"+
    "\1\110\4\55\2\110\5\55\1\112\12\55\1\110\5\55"+
    "\1\110\1\0\1\52\1\113\7\0\1\52\1\0\2\52"+
    "\1\0\1\52\1\113\1\0\4\113\2\0\5\52\1\77"+
    "\1\52\11\113\1\0\5\52\2\0\2\14\1\43\1\0"+
    "\1\43\12\0\1\14\1\0\4\14\2\0\1\44\6\0"+
    "\1\14\1\114\7\14\10\0\2\14\1\43\1\0\1\43"+
    "\12\0\1\14\1\0\4\14\2\0\1\44\6\0\2\14"+
    "\1\115\6\14\10\0\2\14\1\43\1\0\1\43\12\0"+
    "\1\14\1\0\4\14\2\0\1\44\6\0\6\14\1\116"+
    "\2\14\10\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\2\0\1\44\6\0\10\14\1\117\10\0"+
    "\2\37\1\64\1\0\1\64\12\0\1\37\1\0\4\37"+
    "\11\0\11\37\10\0\2\37\15\0\1\37\1\0\4\37"+
    "\2\0\1\65\6\0\11\37\10\0\1\66\1\67\11\0"+
    "\1\70\1\120\1\0\1\70\1\67\1\0\4\67\1\0"+
    "\1\121\1\120\1\0\1\70\1\122\2\0\1\123\11\67"+
    "\3\70\3\0\1\70\1\0\2\67\11\0\1\70\1\120"+
    "\1\0\1\70\1\67\1\0\4\67\2\0\1\120\1\0"+
    "\1\70\1\122\2\0\1\123\11\67\3\70\3\0\1\70"+
    "\1\0\2\70\11\0\2\70\1\0\2\70\1\0\4\70"+
    "\2\0\1\70\1\0\1\70\1\40\2\0\15\70\3\0"+
    "\1\70\3\0\1\124\1\7\1\125\1\7\1\11\6\0"+
    "\1\12\41\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\2\0\1\44\6\0\1\14\1\126\7\14"+
    "\10\0\2\14\1\43\1\0\1\43\12\0\1\14\1\0"+
    "\4\14\2\0\1\44\6\0\1\14\1\127\3\14\1\130"+
    "\3\14\10\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\2\0\1\44\6\0\10\14\1\131\10\0"+
    "\2\132\15\0\1\132\1\0\4\132\11\0\11\132\10\0"+
    "\2\100\1\101\1\0\1\101\4\0\1\52\1\0\2\52"+
    "\1\102\1\52\1\100\1\0\4\100\2\0\3\52\1\104"+
    "\1\52\1\77\1\52\11\100\1\0\5\52\3\0\1\133"+
    "\1\101\1\0\1\101\7\0\1\133\1\102\1\0\1\133"+
    "\1\0\4\133\1\0\1\133\3\0\1\134\3\0\11\133"+
    "\7\0\3\135\1\0\1\135\2\0\4\135\1\0\2\135"+
    "\1\0\40\135\1\0\2\52\7\0\1\52\1\0\2\52"+
    "\1\102\2\52\1\0\4\52\2\0\5\52\1\77\12\52"+
    "\1\0\5\52\2\0\2\52\7\0\1\52\1\0\1\52"+
    "\1\136\1\0\2\52\1\0\4\52\2\0\5\52\1\77"+
    "\12\52\1\0\5\52\2\0\2\52\1\137\1\0\1\137"+
    "\4\0\1\52\1\0\2\52\1\0\1\52\1\106\1\0"+
    "\4\106\2\0\5\52\1\77\12\52\1\0\5\52\23\0"+
    "\1\140\34\0\17\110\1\141\40\110\2\55\7\110\1\55"+
    "\1\110\2\55\1\102\2\55\1\110\4\55\2\110\5\55"+
    "\1\112\12\55\1\110\5\55\2\110\2\142\14\110\1\141"+
    "\1\142\1\110\4\142\11\110\11\142\7\110\1\0\2\113"+
    "\1\143\1\0\1\143\4\0\1\52\1\0\2\52\1\102"+
    "\1\52\1\113\1\0\4\113\2\0\5\52\1\77\1\52"+
    "\11\113\1\0\5\52\2\0\2\14\1\43\1\0\1\43"+
    "\12\0\1\14\1\0\4\14\2\0\1\44\6\0\2\14"+
    "\1\144\6\14\10\0\2\14\1\43\1\0\1\43\12\0"+
    "\1\14\1\0\4\14\1\0\1\145\1\44\6\0\11\14"+
    "\10\0\2\14\1\43\1\0\1\43\12\0\1\14\1\0"+
    "\4\14\2\0\1\44\6\0\7\14\1\115\1\14\10\0"+
    "\2\14\1\43\1\0\1\43\12\0\1\14\1\0\4\14"+
    "\2\0\1\44\5\0\1\146\11\14\10\0\2\67\11\0"+
    "\1\70\1\120\1\0\1\70\1\67\1\0\4\67\2\0"+
    "\1\120\1\0\1\70\1\40\2\0\1\70\11\67\3\70"+
    "\3\0\1\70\1\0\2\147\15\0\1\147\1\0\4\147"+
    "\11\0\11\147\10\0\1\66\1\67\11\0\2\70\1\0"+
    "\1\70\1\67\1\0\4\67\2\0\1\70\1\0\1\70"+
    "\1\150\2\0\1\70\11\67\3\70\3\0\1\70\1\0"+
    "\2\67\11\0\2\70\1\0\1\70\1\67\1\0\4\67"+
    "\2\0\1\70\1\0\1\70\1\40\2\0\1\70\10\67"+
    "\1\151\3\70\3\0\1\70\3\0\1\124\1\7\1\125"+
    "\1\7\1\11\50\0\2\14\1\43\1\0\1\43\12\0"+
    "\1\14\1\0\4\14\2\0\1\44\6\0\1\14\1\152"+
    "\7\14\10\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\2\0\1\44\6\0\2\14\1\153\6\14"+
    "\10\0\2\14\1\43\1\0\1\43\12\0\1\14\1\0"+
    "\4\14\2\0\1\44\6\0\6\14\1\154\2\14\10\0"+
    "\2\14\1\43\1\0\1\43\12\0\1\14\1\0\4\14"+
    "\2\0\1\44\6\0\10\14\1\155\10\0\2\156\12\0"+
    "\1\157\1\160\1\0\1\156\1\0\4\156\10\0\1\77"+
    "\11\156\10\0\2\133\1\161\1\0\1\161\7\0\1\133"+
    "\1\102\1\0\1\133\1\0\4\133\1\0\2\133\1\0"+
    "\1\162\1\134\2\0\12\133\25\0\1\102\40\0\3\135"+
    "\1\0\1\135\2\0\4\135\1\0\2\135\1\163\40\135"+
    "\1\164\2\165\7\164\1\165\1\164\1\165\1\166\1\167"+
    "\2\165\1\164\4\165\2\164\5\165\1\170\12\165\1\164"+
    "\5\165\1\164\3\134\1\171\1\134\1\171\10\134\1\0"+
    "\40\134\23\0\1\172\33\0\16\110\1\102\41\110\2\173"+
    "\12\110\1\174\1\175\1\141\1\173\1\110\4\173\10\110"+
    "\1\112\11\173\7\110\3\0\1\143\1\0\1\143\10\0"+
    "\1\102\41\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\1\0\1\145\1\44\6\0\3\14\1\115"+
    "\5\14\42\0\1\176\24\0\2\177\15\0\1\177\1\0"+
    "\4\177\11\0\11\177\10\0\2\147\12\0\1\200\2\0"+
    "\1\147\1\0\4\147\2\0\1\200\2\0\1\201\2\0"+
    "\1\202\11\147\36\0\1\203\30\0\2\67\11\0\1\70"+
    "\1\120\1\0\1\70\1\67\1\0\4\67\2\0\1\120"+
    "\1\0\1\70\1\122\2\0\1\123\10\67\1\204\3\70"+
    "\3\0\1\70\1\0\2\14\1\43\1\0\1\43\12\0"+
    "\1\14\1\0\4\14\2\0\1\44\6\0\2\14\1\205"+
    "\6\14\10\0\2\14\1\43\1\0\1\43\12\0\1\14"+
    "\1\0\4\14\1\0\1\206\1\44\6\0\11\14\10\0"+
    "\2\14\1\43\1\0\1\43\12\0\1\14\1\0\4\14"+
    "\2\0\1\44\6\0\7\14\1\153\1\14\10\0\2\14"+
    "\1\43\1\0\1\43\12\0\1\14\1\0\4\14\2\0"+
    "\1\44\5\0\1\207\11\14\10\0\2\210\12\0\1\211"+
    "\1\160\1\0\1\210\1\0\4\210\10\0\1\77\11\210"+
    "\10\0\2\210\12\0\1\211\2\0\1\210\1\0\4\210"+
    "\11\0\11\210\11\0\1\133\1\161\1\0\1\161\7\0"+
    "\1\133\1\102\1\0\1\133\1\0\4\133\1\0\1\133"+
    "\2\0\1\162\1\134\3\0\11\133\7\0\3\212\1\162"+
    "\1\212\1\162\2\0\1\213\1\212\1\214\1\0\2\212"+
    "\1\0\12\212\2\0\24\212\15\164\1\215\42\164\2\165"+
    "\7\164\1\165\1\164\1\165\1\216\1\164\2\165\1\164"+
    "\4\165\2\164\5\165\1\170\12\165\1\164\5\165\2\164"+
    "\2\165\7\164\1\165\1\164\1\165\1\104\1\167\2\165"+
    "\1\164\4\165\2\164\5\165\1\170\12\165\1\164\5\165"+
    "\2\164\2\217\12\164\1\215\2\164\1\217\1\164\4\217"+
    "\11\164\11\217\7\164\3\134\1\171\1\134\1\171\10\134"+
    "\1\102\40\134\24\0\1\220\32\0\1\110\2\221\12\110"+
    "\1\222\1\175\1\141\1\221\1\110\4\221\10\110\1\112"+
    "\11\221\10\110\2\221\12\110\1\222\1\110\1\141\1\221"+
    "\1\110\4\221\11\110\11\221\7\110\33\0\1\146\24\0"+
    "\2\223\12\0\1\224\2\0\1\223\1\0\4\223\1\0"+
    "\1\225\1\224\2\0\1\226\2\0\1\146\11\223\2\0"+
    "\1\227\5\0\2\147\12\0\1\200\2\0\1\147\1\0"+
    "\4\147\2\0\1\200\6\0\11\147\42\0\1\150\24\0"+
    "\2\147\15\0\1\147\1\0\4\147\11\0\10\147\1\230"+
    "\50\0\1\231\1\232\3\0\1\233\11\0\2\67\11\0"+
    "\1\70\1\120\1\0\1\70\1\67\1\0\4\67\2\0"+
    "\1\120\1\0\1\70\1\122\2\0\1\123\10\67\1\234"+
    "\3\70\3\0\1\70\1\0\2\14\1\43\1\0\1\43"+
    "\12\0\1\14\1\0\4\14\1\0\1\206\1\44\6\0"+
    "\3\14\1\153\5\14\42\0\1\235\24\0\2\236\15\0"+
    "\1\236\1\0\4\236\11\0\11\236\10\0\2\237\12\0"+
    "\1\240\1\160\1\0\1\237\1\0\4\237\10\0\1\77"+
    "\11\237\10\0\2\237\12\0\1\240\2\0\1\237\1\0"+
    "\4\237\11\0\11\237\7\0\3\212\1\101\1\212\1\101"+
    "\3\0\1\212\2\0\2\212\1\102\12\212\2\0\24\212"+
    "\6\213\1\0\1\213\1\241\1\242\45\213\6\214\1\0"+
    "\2\214\1\243\1\241\44\214\15\164\1\134\42\164\2\165"+
    "\7\164\1\165\1\164\1\165\1\104\1\164\2\165\1\164"+
    "\4\165\2\164\5\165\1\170\12\165\1\164\5\165\2\164"+
    "\2\244\12\164\1\245\1\246\1\164\1\244\1\164\4\244"+
    "\10\164\1\170\11\244\7\164\25\0\1\247\31\0\1\110"+
    "\2\250\12\110\1\251\1\175\1\141\1\250\1\110\4\250"+
    "\10\110\1\112\11\250\10\110\2\250\12\110\1\251\1\110"+
    "\1\141\1\250\1\110\4\250\11\110\11\250\7\110\1\0"+
    "\2\177\12\0\1\224\2\0\1\177\1\0\4\177\2\0"+
    "\1\224\6\0\11\177\10\0\1\252\56\0\2\253\11\0"+
    "\2\253\1\0\2\253\1\0\4\253\2\0\1\253\1\0"+
    "\1\253\3\0\15\253\3\0\1\253\1\0\2\147\12\0"+
    "\1\200\2\0\1\147\1\0\4\147\2\0\1\200\2\0"+
    "\1\201\2\0\1\202\10\147\1\254\47\0\1\255\57\0"+
    "\1\256\62\0\1\257\12\0\2\67\1\260\1\0\1\260"+
    "\6\0\1\70\1\120\1\0\1\70\1\67\1\0\4\67"+
    "\2\0\1\120\1\0\1\70\1\122\2\0\1\123\11\67"+
    "\3\70\3\0\1\70\33\0\1\207\24\0\2\261\12\0"+
    "\1\262\2\0\1\261\1\0\4\261\1\0\1\263\1\262"+
    "\2\0\1\264\2\0\1\207\11\261\2\0\1\265\5\0"+
    "\2\266\12\0\1\267\1\160\1\0\1\266\1\0\4\266"+
    "\10\0\1\77\11\266\10\0\2\266\12\0\1\267\2\0"+
    "\1\266\1\0\4\266\11\0\11\266\12\0\1\101\1\0"+
    "\1\101\10\0\1\102\14\0\1\134\23\0\6\213\1\0"+
    "\1\213\1\270\1\242\45\213\6\214\1\0\2\214\1\243"+
    "\1\271\44\214\1\164\2\272\12\164\1\273\1\246\1\164"+
    "\1\272\1\164\4\272\10\164\1\170\11\272\10\164\2\272"+
    "\12\164\1\274\2\164\1\272\1\164\4\272\11\164\11\272"+
    "\7\164\24\0\1\275\32\0\1\110\2\276\12\110\1\277"+
    "\1\175\1\141\1\276\1\110\4\276\10\110\1\112\11\276"+
    "\10\110\2\276\12\110\1\277\1\110\1\141\1\276\1\110"+
    "\4\276\11\110\11\276\7\110\1\0\1\300\1\227\15\0"+
    "\1\227\1\0\4\227\5\0\1\226\3\0\11\227\2\0"+
    "\1\227\5\0\2\301\11\0\2\253\1\0\1\253\1\301"+
    "\1\0\4\301\2\0\1\253\1\0\1\253\1\226\2\0"+
    "\1\253\11\301\2\253\1\301\3\0\1\253\1\0\2\147"+
    "\12\0\1\200\2\0\1\147\1\0\4\147\2\0\1\200"+
    "\2\0\1\201\2\0\1\202\10\147\1\302\47\0\1\303"+
    "\2\0\1\304\53\0\1\305\62\0\1\306\15\0\1\260"+
    "\1\0\1\260\52\0\2\236\12\0\1\262\2\0\1\236"+
    "\1\0\4\236\2\0\1\262\6\0\11\236\10\0\1\307"+
    "\56\0\2\310\11\0\2\310\1\0\2\310\1\0\4\310"+
    "\2\0\1\310\1\0\1\310\3\0\15\310\3\0\1\310"+
    "\1\0\2\311\12\0\1\312\1\160\1\0\1\311\1\0"+
    "\4\311\10\0\1\77\11\311\10\0\2\311\12\0\1\312"+
    "\2\0\1\311\1\0\4\311\11\0\11\311\7\0\3\213"+
    "\1\313\1\213\1\313\1\0\1\213\1\241\1\242\4\213"+
    "\1\314\14\213\1\315\23\213\3\214\1\316\1\214\1\316"+
    "\1\0\2\214\1\243\1\241\3\214\1\317\14\214\1\320"+
    "\23\214\1\164\2\321\12\164\1\322\1\246\1\164\1\321"+
    "\1\164\4\321\10\164\1\170\11\321\10\164\2\321\12\164"+
    "\1\323\2\164\1\321\1\164\4\321\11\164\11\321\7\164"+
    "\1\0\2\237\12\0\1\240\1\102\1\0\1\237\1\0"+
    "\4\237\11\0\11\237\30\0\1\324\35\0\1\110\2\325"+
    "\12\110\1\326\1\175\1\141\1\325\1\110\4\325\10\110"+
    "\1\112\11\325\10\110\2\325\12\110\1\326\1\110\1\141"+
    "\1\325\1\110\4\325\11\110\11\325\7\110\1\0\2\147"+
    "\1\260\1\0\1\260\7\0\1\200\2\0\1\147\1\0"+
    "\4\147\2\0\1\200\2\0\1\201\2\0\1\202\11\147"+
    "\46\0\1\304\57\0\1\303\61\0\1\304\14\0\1\327"+
    "\1\265\15\0\1\265\1\0\4\265\5\0\1\264\3\0"+
    "\11\265\2\0\1\265\5\0\2\330\11\0\2\310\1\0"+
    "\1\310\1\330\1\0\4\330\2\0\1\310\1\0\1\310"+
    "\1\264\2\0\1\310\11\330\2\310\1\330\3\0\1\310"+
    "\1\0\2\331\12\0\1\332\1\160\1\0\1\331\1\0"+
    "\4\331\10\0\1\77\11\331\10\0\2\331\12\0\1\332"+
    "\2\0\1\331\1\0\4\331\11\0\11\331\7\0\2\213"+
    "\1\333\1\313\1\213\1\313\1\0\1\213\1\241\1\242"+
    "\3\213\1\333\1\314\1\213\1\333\1\213\4\333\1\213"+
    "\1\333\3\213\1\315\3\213\11\333\15\213\1\0\1\213"+
    "\1\241\1\242\4\213\1\314\40\213\2\214\1\334\1\316"+
    "\1\214\1\316\1\0\2\214\1\243\1\241\2\214\1\334"+
    "\1\317\1\214\1\334\1\214\4\334\1\214\1\334\3\214"+
    "\1\320\3\214\11\334\15\214\1\0\2\214\1\243\1\241"+
    "\3\214\1\317\40\214\1\164\2\335\12\164\1\336\1\246"+
    "\1\164\1\335\1\164\4\335\10\164\1\170\11\335\10\164"+
    "\2\335\12\164\1\337\2\164\1\335\1\164\4\335\11\164"+
    "\11\335\7\164\1\0\2\266\12\0\1\267\1\102\1\0"+
    "\1\266\1\0\4\266\11\0\11\266\7\0\26\324\1\340"+
    "\30\324\1\110\2\341\12\110\1\342\1\175\1\141\1\341"+
    "\1\110\4\341\10\110\1\112\11\341\10\110\2\341\12\110"+
    "\1\342\1\110\1\141\1\341\1\110\4\341\11\110\11\341"+
    "\7\110\1\0\2\343\12\0\1\344\1\160\1\0\1\343"+
    "\1\0\4\343\10\0\1\77\11\343\10\0\2\343\12\0"+
    "\1\344\2\0\1\343\1\0\4\343\11\0\11\343\7\0"+
    "\1\213\2\333\1\345\1\213\1\345\1\0\1\213\1\241"+
    "\1\242\3\213\1\333\1\314\1\213\1\333\1\213\4\333"+
    "\1\213\2\333\1\213\1\346\1\315\2\213\12\333\7\213"+
    "\1\214\2\334\1\347\1\214\1\347\1\0\2\214\1\243"+
    "\1\241\2\214\1\334\1\317\1\214\1\334\1\214\4\334"+
    "\1\214\2\334\1\214\1\350\1\320\2\214\12\334\7\214"+
    "\1\164\2\351\12\164\1\352\1\246\1\164\1\351\1\164"+
    "\4\351\10\164\1\170\11\351\10\164\2\351\12\164\1\353"+
    "\2\164\1\351\1\164\4\351\11\164\11\351\7\164\1\0"+
    "\2\311\12\0\1\312\1\102\1\0\1\311\1\0\4\311"+
    "\11\0\11\311\7\0\26\324\1\354\30\324\1\110\2\355"+
    "\12\110\1\356\1\175\1\141\1\355\1\110\4\355\10\110"+
    "\1\112\11\355\10\110\2\355\12\110\1\356\1\110\1\141"+
    "\1\355\1\110\4\355\11\110\11\355\7\110\1\0\2\357"+
    "\12\0\1\360\1\160\1\0\1\357\1\0\4\357\10\0"+
    "\1\77\11\357\10\0\2\357\12\0\1\360\2\0\1\357"+
    "\1\0\4\357\11\0\11\357\7\0\2\213\1\333\1\345"+
    "\1\213\1\345\1\0\1\213\1\241\1\242\3\213\1\333"+
    "\1\314\1\213\1\333\1\213\4\333\1\213\1\333\2\213"+
    "\1\346\1\315\3\213\11\333\7\213\3\361\1\346\1\361"+
    "\1\346\1\0\1\213\1\270\1\362\1\363\1\213\2\361"+
    "\1\213\12\361\2\213\24\361\2\214\1\334\1\347\1\214"+
    "\1\347\1\0\2\214\1\243\1\241\2\214\1\334\1\317"+
    "\1\214\1\334\1\214\4\334\1\214\1\334\2\214\1\350"+
    "\1\320\3\214\11\334\7\214\3\364\1\350\1\364\1\350"+
    "\1\0\1\214\1\363\1\365\1\271\1\214\2\364\1\214"+
    "\12\364\2\214\24\364\1\164\2\366\12\164\1\367\1\246"+
    "\1\164\1\366\1\164\4\366\10\164\1\170\11\366\10\164"+
    "\2\366\12\164\1\370\2\164\1\366\1\164\4\366\11\164"+
    "\11\366\7\164\1\0\2\331\12\0\1\332\1\102\1\0"+
    "\1\331\1\0\4\331\11\0\11\331\7\0\16\324\1\102"+
    "\40\324\1\110\2\371\12\110\1\372\1\175\1\141\1\371"+
    "\1\110\4\371\10\110\1\112\11\371\10\110\2\371\12\110"+
    "\1\372\1\110\1\141\1\371\1\110\4\371\11\110\11\371"+
    "\7\110\1\0\2\373\12\0\1\374\1\160\1\0\1\373"+
    "\1\0\4\373\10\0\1\77\11\373\10\0\2\373\12\0"+
    "\1\374\2\0\1\373\1\0\4\373\11\0\11\373\7\0"+
    "\3\361\1\313\1\361\1\313\1\0\1\213\1\241\1\362"+
    "\2\213\2\361\1\314\12\361\2\213\27\361\1\313\1\361"+
    "\1\313\1\0\1\213\1\270\1\362\2\213\2\361\1\314"+
    "\12\361\2\213\24\361\6\363\1\0\1\363\1\271\1\375"+
    "\1\270\44\363\3\364\1\316\1\364\1\316\1\0\2\214"+
    "\1\365\1\241\1\214\2\364\1\317\12\364\2\214\27\364"+
    "\1\316\1\364\1\316\1\0\2\214\1\365\1\271\1\214"+
    "\2\364\1\317\12\364\2\214\24\364\1\164\2\376\12\164"+
    "\1\377\1\246\1\164\1\376\1\164\4\376\10\164\1\170"+
    "\11\376\10\164\2\376\12\164\1\u0100\2\164\1\376\1\164"+
    "\4\376\11\164\11\376\7\164\1\0\2\343\12\0\1\344"+
    "\1\102\1\0\1\343\1\0\4\343\11\0\11\343\7\0"+
    "\1\110\2\u0101\12\110\1\u0102\1\175\1\141\1\u0101\1\110"+
    "\4\u0101\10\110\1\112\11\u0101\10\110\2\u0101\12\110\1\u0102"+
    "\1\110\1\141\1\u0101\1\110\4\u0101\11\110\11\u0101\7\110"+
    "\1\0\2\u0103\12\0\1\u0104\1\160\1\0\1\u0103\1\0"+
    "\4\u0103\10\0\1\77\11\u0103\10\0\2\u0103\12\0\1\u0104"+
    "\2\0\1\u0103\1\0\4\u0103\11\0\11\u0103\7\0\6\363"+
    "\1\0\1\363\1\u0105\1\375\1\u0105\44\363\1\164\2\u0106"+
    "\12\164\1\u0107\1\246\1\164\1\u0106\1\164\4\u0106\10\164"+
    "\1\170\11\u0106\10\164\2\u0106\12\164\1\u0108\2\164\1\u0106"+
    "\1\164\4\u0106\11\164\11\u0106\7\164\1\0\2\357\12\0"+
    "\1\360\1\102\1\0\1\357\1\0\4\357\11\0\11\357"+
    "\7\0\1\110\2\u0109\12\110\1\u010a\1\175\1\141\1\u0109"+
    "\1\110\4\u0109\10\110\1\112\11\u0109\10\110\2\u0109\12\110"+
    "\1\u010a\1\110\1\141\1\u0109\1\110\4\u0109\11\110\11\u0109"+
    "\7\110\1\0\2\u010b\12\0\1\u010c\1\160\1\0\1\u010b"+
    "\1\0\4\u010b\10\0\1\77\11\u010b\10\0\2\u010b\12\0"+
    "\1\u010c\2\0\1\u010b\1\0\4\u010b\11\0\11\u010b\7\0"+
    "\3\363\1\u010d\1\363\1\u010d\1\0\1\363\1\271\1\375"+
    "\1\270\3\363\1\u010e\14\363\1\u010f\23\363\1\164\2\u0110"+
    "\12\164\1\u0111\1\246\1\164\1\u0110\1\164\4\u0110\10\164"+
    "\1\170\11\u0110\10\164\2\u0110\12\164\1\u0112\2\164\1\u0110"+
    "\1\164\4\u0110\11\164\11\u0110\7\164\1\0\2\373\12\0"+
    "\1\374\1\102\1\0\1\373\1\0\4\373\11\0\11\373"+
    "\7\0\1\110\2\u0113\12\110\1\u0114\1\175\1\141\1\u0113"+
    "\1\110\4\u0113\10\110\1\112\11\u0113\10\110\2\u0113\12\110"+
    "\1\u0114\1\110\1\141\1\u0113\1\110\4\u0113\11\110\11\u0113"+
    "\7\110\1\0\2\u0115\12\0\1\u0116\1\160\1\0\1\u0115"+
    "\1\0\4\u0115\10\0\1\77\11\u0115\10\0\2\u0115\12\0"+
    "\1\u0116\2\0\1\u0115\1\0\4\u0115\11\0\11\u0115\7\0"+
    "\2\363\1\u0117\1\u010d\1\363\1\u010d\1\0\1\363\1\271"+
    "\1\375\1\270\2\363\1\u0117\1\u010e\1\363\1\u0117\1\363"+
    "\4\u0117\1\363\1\u0117\3\363\1\u010f\3\363\11\u0117\15\363"+
    "\1\0\1\363\1\271\1\375\1\270\3\363\1\u010e\40\363"+
    "\1\164\2\u0118\12\164\1\u0119\1\246\1\164\1\u0118\1\164"+
    "\4\u0118\10\164\1\170\11\u0118\10\164\2\u0118\12\164\1\u011a"+
    "\2\164\1\u0118\1\164\4\u0118\11\164\11\u0118\7\164\1\0"+
    "\2\u0103\12\0\1\u0104\1\102\1\0\1\u0103\1\0\4\u0103"+
    "\11\0\11\u0103\7\0\1\110\2\u011b\12\110\1\u011c\1\175"+
    "\1\141\1\u011b\1\110\4\u011b\10\110\1\112\11\u011b\10\110"+
    "\2\u011b\12\110\1\u011c\1\110\1\141\1\u011b\1\110\4\u011b"+
    "\11\110\11\u011b\7\110\1\0\2\u011d\12\0\1\u011e\1\160"+
    "\1\0\1\u011d\1\0\4\u011d\10\0\1\77\11\u011d\10\0"+
    "\2\u011d\12\0\1\u011e\2\0\1\u011d\1\0\4\u011d\11\0"+
    "\11\u011d\7\0\1\363\2\u0117\1\u011f\1\363\1\u011f\1\0"+
    "\1\363\1\271\1\375\1\270\2\363\1\u0117\1\u010e\1\363"+
    "\1\u0117\1\363\4\u0117\1\363\2\u0117\1\363\1\u0120\1\u010f"+
    "\2\363\12\u0117\7\363\1\164\2\u0121\12\164\1\u0122\1\246"+
    "\1\164\1\u0121\1\164\4\u0121\10\164\1\170\11\u0121\10\164"+
    "\2\u0121\12\164\1\u0123\2\164\1\u0121\1\164\4\u0121\11\164"+
    "\11\u0121\7\164\1\0\2\u010b\12\0\1\u010c\1\102\1\0"+
    "\1\u010b\1\0\4\u010b\11\0\11\u010b\7\0\1\110\2\u0124"+
    "\12\110\1\u0125\1\175\1\141\1\u0124\1\110\4\u0124\10\110"+
    "\1\112\11\u0124\10\110\2\u0124\12\110\1\u0125\1\110\1\141"+
    "\1\u0124\1\110\4\u0124\11\110\11\u0124\7\110\1\0\2\u0126"+
    "\12\0\1\u0127\1\160\1\0\1\u0126\1\0\4\u0126\10\0"+
    "\1\77\11\u0126\10\0\2\u0126\12\0\1\u0127\2\0\1\u0126"+
    "\1\0\4\u0126\11\0\11\u0126\7\0\2\363\1\u0117\1\u011f"+
    "\1\363\1\u011f\1\0\1\363\1\271\1\375\1\270\2\363"+
    "\1\u0117\1\u010e\1\363\1\u0117\1\363\4\u0117\1\363\1\u0117"+
    "\2\363\1\u0120\1\u010f\3\363\11\u0117\7\363\3\u0128\1\u0120"+
    "\1\u0128\1\u0120\1\0\1\363\1\u0105\1\u0129\1\u0105\1\363"+
    "\2\u0128\1\363\12\u0128\2\363\24\u0128\1\164\2\u012a\12\164"+
    "\1\u012b\1\246\1\164\1\u012a\1\164\4\u012a\10\164\1\170"+
    "\11\u012a\10\164\2\u012a\12\164\1\u012c\2\164\1\u012a\1\164"+
    "\4\u012a\11\164\11\u012a\7\164\1\0\2\u0115\12\0\1\u0116"+
    "\1\102\1\0\1\u0115\1\0\4\u0115\11\0\11\u0115\7\0"+
    "\1\110\2\u012d\12\110\1\u012e\1\175\1\141\1\u012d\1\110"+
    "\4\u012d\10\110\1\112\11\u012d\10\110\2\u012d\12\110\1\u012e"+
    "\1\110\1\141\1\u012d\1\110\4\u012d\11\110\11\u012d\7\110"+
    "\1\0\2\u012f\12\0\1\u0130\1\160\1\0\1\u012f\1\0"+
    "\4\u012f\10\0\1\77\11\u012f\10\0\2\u012f\12\0\1\u0130"+
    "\2\0\1\u012f\1\0\4\u012f\11\0\11\u012f\7\0\3\u0128"+
    "\1\u010d\1\u0128\1\u010d\1\0\1\363\1\271\1\u0129\1\270"+
    "\1\363\2\u0128\1\u010e\12\u0128\2\363\27\u0128\1\u010d\1\u0128"+
    "\1\u010d\1\0\1\363\1\u0105\1\u0129\1\u0105\1\363\2\u0128"+
    "\1\u010e\12\u0128\2\363\24\u0128\1\164\2\u0131\12\164\1\u0132"+
    "\1\246\1\164\1\u0131\1\164\4\u0131\10\164\1\170\11\u0131"+
    "\10\164\2\u0131\12\164\1\u0133\2\164\1\u0131\1\164\4\u0131"+
    "\11\164\11\u0131\7\164\1\0\2\u011d\12\0\1\u011e\1\102"+
    "\1\0\1\u011d\1\0\4\u011d\11\0\11\u011d\7\0\1\110"+
    "\2\u0134\12\110\1\u0135\1\175\1\141\1\u0134\1\110\4\u0134"+
    "\10\110\1\112\11\u0134\10\110\2\u0134\12\110\1\u0135\1\110"+
    "\1\141\1\u0134\1\110\4\u0134\11\110\11\u0134\7\110\1\0"+
    "\2\u0136\12\0\1\u0137\1\160\1\0\1\u0136\1\0\4\u0136"+
    "\10\0\1\77\11\u0136\10\0\2\u0136\12\0\1\u0137\2\0"+
    "\1\u0136\1\0\4\u0136\11\0\11\u0136\7\0\1\164\2\u0138"+
    "\12\164\1\u0139\1\246\1\164\1\u0138\1\164\4\u0138\10\164"+
    "\1\170\11\u0138\10\164\2\u0138\12\164\1\u013a\2\164\1\u0138"+
    "\1\164\4\u0138\11\164\11\u0138\7\164\1\0\2\u0126\12\0"+
    "\1\u0127\1\102\1\0\1\u0126\1\0\4\u0126\11\0\11\u0126"+
    "\7\0\1\110\2\u013b\12\110\1\u013c\1\175\1\141\1\u013b"+
    "\1\110\4\u013b\10\110\1\112\11\u013b\10\110\2\u013b\12\110"+
    "\1\u013c\1\110\1\141\1\u013b\1\110\4\u013b\11\110\11\u013b"+
    "\7\110\1\0\2\u013d\12\0\1\u013e\1\160\1\0\1\u013d"+
    "\1\0\4\u013d\10\0\1\77\11\u013d\10\0\2\u013d\12\0"+
    "\1\u013e\2\0\1\u013d\1\0\4\u013d\11\0\11\u013d\7\0"+
    "\1\164\2\u013f\12\164\1\u0140\1\246\1\164\1\u013f\1\164"+
    "\4\u013f\10\164\1\170\11\u013f\10\164\2\u013f\12\164\1\u0141"+
    "\2\164\1\u013f\1\164\4\u013f\11\164\11\u013f\7\164\1\0"+
    "\2\u012f\12\0\1\u0130\1\102\1\0\1\u012f\1\0\4\u012f"+
    "\11\0\11\u012f\7\0\1\110\2\u0142\12\110\1\u0143\1\175"+
    "\1\141\1\u0142\1\110\4\u0142\10\110\1\112\11\u0142\10\110"+
    "\2\u0142\12\110\1\u0143\1\110\1\141\1\u0142\1\110\4\u0142"+
    "\11\110\11\u0142\7\110\1\0\2\u0144\12\0\1\u0145\1\160"+
    "\1\0\1\u0144\1\0\4\u0144\10\0\1\77\11\u0144\10\0"+
    "\2\u0144\12\0\1\u0145\2\0\1\u0144\1\0\4\u0144\11\0"+
    "\11\u0144\7\0\1\164\2\u0146\12\164\1\u0147\1\246\1\164"+
    "\1\u0146\1\164\4\u0146\10\164\1\170\11\u0146\10\164\2\u0146"+
    "\12\164\1\u0148\2\164\1\u0146\1\164\4\u0146\11\164\11\u0146"+
    "\7\164\1\0\2\u0136\12\0\1\u0137\1\102\1\0\1\u0136"+
    "\1\0\4\u0136\11\0\11\u0136\7\0\1\110\2\u0149\12\110"+
    "\1\u014a\1\175\1\141\1\u0149\1\110\4\u0149\10\110\1\112"+
    "\11\u0149\10\110\2\u0149\12\110\1\u014a\1\110\1\141\1\u0149"+
    "\1\110\4\u0149\11\110\11\u0149\7\110\1\0\2\u014b\12\0"+
    "\1\u014c\1\160\1\0\1\u014b\1\0\4\u014b\10\0\1\77"+
    "\11\u014b\10\0\2\u014b\12\0\1\u014c\2\0\1\u014b\1\0"+
    "\4\u014b\11\0\11\u014b\7\0\1\164\2\u014d\12\164\1\u014e"+
    "\1\246\1\164\1\u014d\1\164\4\u014d\10\164\1\170\11\u014d"+
    "\10\164\2\u014d\12\164\1\u014f\2\164\1\u014d\1\164\4\u014d"+
    "\11\164\11\u014d\7\164\1\0\2\u013d\12\0\1\u013e\1\102"+
    "\1\0\1\u013d\1\0\4\u013d\11\0\11\u013d\7\0\1\110"+
    "\2\u0150\12\110\1\u0151\1\175\1\141\1\u0150\1\110\4\u0150"+
    "\10\110\1\112\11\u0150\10\110\2\u0150\12\110\1\u0151\1\110"+
    "\1\141\1\u0150\1\110\4\u0150\11\110\11\u0150\7\110\1\0"+
    "\2\u0152\12\0\1\u0153\1\160\1\0\1\u0152\1\0\4\u0152"+
    "\10\0\1\77\11\u0152\10\0\2\u0152\12\0\1\u0153\2\0"+
    "\1\u0152\1\0\4\u0152\11\0\11\u0152\7\0\1\164\2\u0154"+
    "\12\164\1\u0155\1\246\1\164\1\u0154\1\164\4\u0154\10\164"+
    "\1\170\11\u0154\10\164\2\u0154\12\164\1\u0156\2\164\1\u0154"+
    "\1\164\4\u0154\11\164\11\u0154\7\164\1\0\2\u0144\12\0"+
    "\1\u0145\1\102\1\0\1\u0144\1\0\4\u0144\11\0\11\u0144"+
    "\7\0\1\110\2\u0157\12\110\1\u0158\1\175\1\141\1\u0157"+
    "\1\110\4\u0157\10\110\1\112\11\u0157\10\110\2\u0157\12\110"+
    "\1\u0158\1\110\1\141\1\u0157\1\110\4\u0157\11\110\11\u0157"+
    "\7\110\1\0\2\u0159\12\0\1\u015a\1\160\1\0\1\u0159"+
    "\1\0\4\u0159\10\0\1\77\11\u0159\10\0\2\u0159\12\0"+
    "\1\u015a\2\0\1\u0159\1\0\4\u0159\11\0\11\u0159\7\0"+
    "\1\164\2\u015b\12\164\1\u015c\1\246\1\164\1\u015b\1\164"+
    "\4\u015b\10\164\1\170\11\u015b\10\164\2\u015b\12\164\1\u015d"+
    "\2\164\1\u015b\1\164\4\u015b\11\164\11\u015b\7\164\1\0"+
    "\2\u014b\12\0\1\u014c\1\102\1\0\1\u014b\1\0\4\u014b"+
    "\11\0\11\u014b\7\0\1\110\2\u015e\12\110\1\u015f\1\175"+
    "\1\141\1\u015e\1\110\4\u015e\10\110\1\112\11\u015e\10\110"+
    "\2\u015e\12\110\1\u015f\1\110\1\141\1\u015e\1\110\4\u015e"+
    "\11\110\11\u015e\7\110\1\0\2\u0160\12\0\1\u0161\1\160"+
    "\1\0\1\u0160\1\0\4\u0160\10\0\1\77\11\u0160\10\0"+
    "\2\u0160\12\0\1\u0161\2\0\1\u0160\1\0\4\u0160\11\0"+
    "\11\u0160\7\0\1\164\2\u0162\12\164\1\u0163\1\246\1\164"+
    "\1\u0162\1\164\4\u0162\10\164\1\170\11\u0162\10\164\2\u0162"+
    "\12\164\1\u0164\2\164\1\u0162\1\164\4\u0162\11\164\11\u0162"+
    "\7\164\1\0\2\u0152\12\0\1\u0153\1\102\1\0\1\u0152"+
    "\1\0\4\u0152\11\0\11\u0152\7\0\1\110\2\u0165\12\110"+
    "\1\u0166\1\175\1\141\1\u0165\1\110\4\u0165\10\110\1\112"+
    "\11\u0165\10\110\2\u0165\12\110\1\u0166\1\110\1\141\1\u0165"+
    "\1\110\4\u0165\11\110\11\u0165\7\110\1\0\2\u0167\12\0"+
    "\1\u0168\1\160\1\0\1\u0167\1\0\4\u0167\10\0\1\77"+
    "\11\u0167\10\0\2\u0167\12\0\1\u0168\2\0\1\u0167\1\0"+
    "\4\u0167\11\0\11\u0167\7\0\1\164\2\u0169\12\164\1\u016a"+
    "\1\246\1\164\1\u0169\1\164\4\u0169\10\164\1\170\11\u0169"+
    "\10\164\2\u0169\12\164\1\u016b\2\164\1\u0169\1\164\4\u0169"+
    "\11\164\11\u0169\7\164\1\0\2\u0159\12\0\1\u015a\1\102"+
    "\1\0\1\u0159\1\0\4\u0159\11\0\11\u0159\7\0\1\110"+
    "\2\u016c\12\110\1\u016d\1\175\1\141\1\u016c\1\110\4\u016c"+
    "\10\110\1\112\11\u016c\10\110\2\u016c\12\110\1\u016d\1\110"+
    "\1\141\1\u016c\1\110\4\u016c\11\110\11\u016c\7\110\1\0"+
    "\2\u016e\12\0\1\u016f\1\160\1\0\1\u016e\1\0\4\u016e"+
    "\10\0\1\77\11\u016e\10\0\2\u016e\12\0\1\u016f\2\0"+
    "\1\u016e\1\0\4\u016e\11\0\11\u016e\7\0\1\164\2\u0170"+
    "\12\164\1\u0171\1\246\1\164\1\u0170\1\164\4\u0170\10\164"+
    "\1\170\11\u0170\10\164\2\u0170\12\164\1\u0172\2\164\1\u0170"+
    "\1\164\4\u0170\11\164\11\u0170\7\164\1\0\2\u0160\12\0"+
    "\1\u0161\1\102\1\0\1\u0160\1\0\4\u0160\11\0\11\u0160"+
    "\7\0\1\110\2\u0173\12\110\1\u0174\1\175\1\141\1\u0173"+
    "\1\110\4\u0173\10\110\1\112\11\u0173\10\110\2\u0173\12\110"+
    "\1\u0174\1\110\1\141\1\u0173\1\110\4\u0173\11\110\11\u0173"+
    "\7\110\1\0\2\u0175\12\0\1\u0176\1\160\1\0\1\u0175"+
    "\1\0\4\u0175\10\0\1\77\11\u0175\10\0\2\u0175\12\0"+
    "\1\u0176\2\0\1\u0175\1\0\4\u0175\11\0\11\u0175\7\0"+
    "\1\164\2\u0177\12\164\1\u0178\1\246\1\164\1\u0177\1\164"+
    "\4\u0177\10\164\1\170\11\u0177\10\164\2\u0177\12\164\1\u0179"+
    "\2\164\1\u0177\1\164\4\u0177\11\164\11\u0177\7\164\1\0"+
    "\2\u0167\12\0\1\u0168\1\102\1\0\1\u0167\1\0\4\u0167"+
    "\11\0\11\u0167\7\0\1\110\2\u017a\12\110\1\u017b\1\175"+
    "\1\141\1\u017a\1\110\4\u017a\10\110\1\112\11\u017a\10\110"+
    "\2\u017a\12\110\1\u017b\1\110\1\141\1\u017a\1\110\4\u017a"+
    "\11\110\11\u017a\7\110\1\0\2\u017c\12\0\1\u017d\1\160"+
    "\1\0\1\u017c\1\0\4\u017c\10\0\1\77\11\u017c\10\0"+
    "\2\u017c\12\0\1\u017d\2\0\1\u017c\1\0\4\u017c\11\0"+
    "\11\u017c\7\0\1\164\2\u017e\12\164\1\u017f\1\246\1\164"+
    "\1\u017e\1\164\4\u017e\10\164\1\170\11\u017e\10\164\2\u017e"+
    "\12\164\1\u0180\2\164\1\u017e\1\164\4\u017e\11\164\11\u017e"+
    "\7\164\1\0\2\u016e\12\0\1\u016f\1\102\1\0\1\u016e"+
    "\1\0\4\u016e\11\0\11\u016e\7\0\1\110\2\u0181\12\110"+
    "\1\u0182\1\175\1\141\1\u0181\1\110\4\u0181\10\110\1\112"+
    "\11\u0181\10\110\2\u0181\12\110\1\u0182\1\110\1\141\1\u0181"+
    "\1\110\4\u0181\11\110\11\u0181\7\110\1\0\2\u0183\12\0"+
    "\1\u0184\1\160\1\0\1\u0183\1\0\4\u0183\10\0\1\77"+
    "\11\u0183\10\0\2\u0183\12\0\1\u0184\2\0\1\u0183\1\0"+
    "\4\u0183\11\0\11\u0183\7\0\1\164\2\u0185\12\164\1\u0186"+
    "\1\246\1\164\1\u0185\1\164\4\u0185\10\164\1\170\11\u0185"+
    "\10\164\2\u0185\12\164\1\u0187\2\164\1\u0185\1\164\4\u0185"+
    "\11\164\11\u0185\7\164\1\0\2\u0175\12\0\1\u0176\1\102"+
    "\1\0\1\u0175\1\0\4\u0175\11\0\11\u0175\7\0\1\110"+
    "\2\u0188\12\110\1\u0189\1\175\1\141\1\u0188\1\110\4\u0188"+
    "\10\110\1\112\11\u0188\10\110\2\u0188\12\110\1\u0189\1\110"+
    "\1\141\1\u0188\1\110\4\u0188\11\110\11\u0188\7\110\1\0"+
    "\2\u018a\12\0\1\u018b\1\160\1\0\1\u018a\1\0\4\u018a"+
    "\10\0\1\77\11\u018a\10\0\2\u018a\12\0\1\u018b\2\0"+
    "\1\u018a\1\0\4\u018a\11\0\11\u018a\7\0\1\164\2\u018c"+
    "\12\164\1\u018d\1\246\1\164\1\u018c\1\164\4\u018c\10\164"+
    "\1\170\11\u018c\10\164\2\u018c\12\164\1\u018e\2\164\1\u018c"+
    "\1\164\4\u018c\11\164\11\u018c\7\164\1\0\2\u017c\12\0"+
    "\1\u017d\1\102\1\0\1\u017c\1\0\4\u017c\11\0\11\u017c"+
    "\7\0\1\110\2\u018f\12\110\1\u0190\1\175\1\141\1\u018f"+
    "\1\110\4\u018f\10\110\1\112\11\u018f\10\110\2\u018f\12\110"+
    "\1\u0190\1\110\1\141\1\u018f\1\110\4\u018f\11\110\11\u018f"+
    "\7\110\1\0\2\u0191\12\0\1\u0192\1\160\1\0\1\u0191"+
    "\1\0\4\u0191\10\0\1\77\11\u0191\10\0\2\u0191\12\0"+
    "\1\u0192\2\0\1\u0191\1\0\4\u0191\11\0\11\u0191\7\0"+
    "\1\164\2\u0193\12\164\1\u0194\1\246\1\164\1\u0193\1\164"+
    "\4\u0193\10\164\1\170\11\u0193\10\164\2\u0193\12\164\1\u0195"+
    "\2\164\1\u0193\1\164\4\u0193\11\164\11\u0193\7\164\1\0"+
    "\2\u0183\12\0\1\u0184\1\102\1\0\1\u0183\1\0\4\u0183"+
    "\11\0\11\u0183\7\0\1\110\2\u0196\12\110\1\u0197\1\175"+
    "\1\141\1\u0196\1\110\4\u0196\10\110\1\112\11\u0196\10\110"+
    "\2\u0196\12\110\1\u0197\1\110\1\141\1\u0196\1\110\4\u0196"+
    "\11\110\11\u0196\7\110\1\0\2\u0198\12\0\1\u0199\1\160"+
    "\1\0\1\u0198\1\0\4\u0198\10\0\1\77\11\u0198\10\0"+
    "\2\u0198\12\0\1\u0199\2\0\1\u0198\1\0\4\u0198\11\0"+
    "\11\u0198\7\0\1\164\2\u019a\12\164\1\u019b\1\246\1\164"+
    "\1\u019a\1\164\4\u019a\10\164\1\170\11\u019a\10\164\2\u019a"+
    "\12\164\1\u019c\2\164\1\u019a\1\164\4\u019a\11\164\11\u019a"+
    "\7\164\1\0\2\u018a\12\0\1\u018b\1\102\1\0\1\u018a"+
    "\1\0\4\u018a\11\0\11\u018a\7\0\1\110\2\u019d\12\110"+
    "\1\u019e\1\175\1\141\1\u019d\1\110\4\u019d\10\110\1\112"+
    "\11\u019d\10\110\2\u019d\12\110\1\u019e\1\110\1\141\1\u019d"+
    "\1\110\4\u019d\11\110\11\u019d\7\110\1\0\2\u019f\12\0"+
    "\1\u01a0\1\160\1\0\1\u019f\1\0\4\u019f\10\0\1\77"+
    "\11\u019f\10\0\2\u019f\12\0\1\u01a0\2\0\1\u019f\1\0"+
    "\4\u019f\11\0\11\u019f\7\0\1\164\2\u01a1\12\164\1\u01a2"+
    "\1\246\1\164\1\u01a1\1\164\4\u01a1\10\164\1\170\11\u01a1"+
    "\10\164\2\u01a1\12\164\1\u01a3\2\164\1\u01a1\1\164\4\u01a1"+
    "\11\164\11\u01a1\7\164\1\0\2\u0191\12\0\1\u0192\1\102"+
    "\1\0\1\u0191\1\0\4\u0191\11\0\11\u0191\7\0\1\110"+
    "\2\u01a4\12\110\1\u01a5\1\175\1\141\1\u01a4\1\110\4\u01a4"+
    "\10\110\1\112\11\u01a4\10\110\2\u01a4\12\110\1\u01a5\1\110"+
    "\1\141\1\u01a4\1\110\4\u01a4\11\110\11\u01a4\7\110\1\0"+
    "\2\u01a6\12\0\1\u01a7\1\160\1\0\1\u01a6\1\0\4\u01a6"+
    "\10\0\1\77\11\u01a6\10\0\2\u01a6\12\0\1\u01a7\2\0"+
    "\1\u01a6\1\0\4\u01a6\11\0\11\u01a6\7\0\1\164\2\u01a8"+
    "\12\164\1\u01a9\1\246\1\164\1\u01a8\1\164\4\u01a8\10\164"+
    "\1\170\11\u01a8\10\164\2\u01a8\12\164\1\u01aa\2\164\1\u01a8"+
    "\1\164\4\u01a8\11\164\11\u01a8\7\164\1\0\2\u0198\12\0"+
    "\1\u0199\1\102\1\0\1\u0198\1\0\4\u0198\11\0\11\u0198"+
    "\7\0\1\110\2\u01ab\12\110\1\u01ac\1\175\1\141\1\u01ab"+
    "\1\110\4\u01ab\10\110\1\112\11\u01ab\10\110\2\u01ab\12\110"+
    "\1\u01ac\1\110\1\141\1\u01ab\1\110\4\u01ab\11\110\11\u01ab"+
    "\7\110\1\0\2\u01ad\12\0\1\u01ae\1\160\1\0\1\u01ad"+
    "\1\0\4\u01ad\10\0\1\77\11\u01ad\10\0\2\u01ad\12\0"+
    "\1\u01ae\2\0\1\u01ad\1\0\4\u01ad\11\0\11\u01ad\7\0"+
    "\1\164\2\u01af\12\164\1\u01b0\1\246\1\164\1\u01af\1\164"+
    "\4\u01af\10\164\1\170\11\u01af\10\164\2\u01af\12\164\1\u01b1"+
    "\2\164\1\u01af\1\164\4\u01af\11\164\11\u01af\7\164\1\0"+
    "\2\u019f\12\0\1\u01a0\1\102\1\0\1\u019f\1\0\4\u019f"+
    "\11\0\11\u019f\7\0\1\110\2\u01b2\12\110\1\u01b3\1\175"+
    "\1\141\1\u01b2\1\110\4\u01b2\10\110\1\112\11\u01b2\10\110"+
    "\2\u01b2\12\110\1\u01b3\1\110\1\141\1\u01b2\1\110\4\u01b2"+
    "\11\110\11\u01b2\7\110\1\0\2\u01b4\12\0\1\u01b5\1\160"+
    "\1\0\1\u01b4\1\0\4\u01b4\10\0\1\77\11\u01b4\10\0"+
    "\2\u01b4\12\0\1\u01b5\2\0\1\u01b4\1\0\4\u01b4\11\0"+
    "\11\u01b4\7\0\1\164\2\u01b6\12\164\1\u01b7\1\246\1\164"+
    "\1\u01b6\1\164\4\u01b6\10\164\1\170\11\u01b6\10\164\2\u01b6"+
    "\12\164\1\u01b8\2\164\1\u01b6\1\164\4\u01b6\11\164\11\u01b6"+
    "\7\164\1\0\2\u01a6\12\0\1\u01a7\1\102\1\0\1\u01a6"+
    "\1\0\4\u01a6\11\0\11\u01a6\7\0\1\110\2\u01b9\12\110"+
    "\1\u01ba\1\175\1\141\1\u01b9\1\110\4\u01b9\10\110\1\112"+
    "\11\u01b9\10\110\2\u01b9\12\110\1\u01ba\1\110\1\141\1\u01b9"+
    "\1\110\4\u01b9\11\110\11\u01b9\7\110\1\0\2\u01bb\12\0"+
    "\1\u01bc\1\160\1\0\1\u01bb\1\0\4\u01bb\10\0\1\77"+
    "\11\u01bb\10\0\2\u01bb\12\0\1\u01bc\2\0\1\u01bb\1\0"+
    "\4\u01bb\11\0\11\u01bb\7\0\1\164\2\u01bd\12\164\1\u01be"+
    "\1\246\1\164\1\u01bd\1\164\4\u01bd\10\164\1\170\11\u01bd"+
    "\10\164\2\u01bd\12\164\1\u01bf\2\164\1\u01bd\1\164\4\u01bd"+
    "\11\164\11\u01bd\7\164\1\0\2\u01ad\12\0\1\u01ae\1\102"+
    "\1\0\1\u01ad\1\0\4\u01ad\11\0\11\u01ad\7\0\1\110"+
    "\2\u01c0\12\110\1\u01c1\1\175\1\141\1\u01c0\1\110\4\u01c0"+
    "\10\110\1\112\11\u01c0\10\110\2\u01c0\12\110\1\u01c1\1\110"+
    "\1\141\1\u01c0\1\110\4\u01c0\11\110\11\u01c0\7\110\1\0"+
    "\2\u01c2\12\0\1\u01c3\1\160\1\0\1\u01c2\1\0\4\u01c2"+
    "\10\0\1\77\11\u01c2\10\0\2\u01c2\12\0\1\u01c3\2\0"+
    "\1\u01c2\1\0\4\u01c2\11\0\11\u01c2\7\0\1\164\2\u01c4"+
    "\12\164\1\u01c5\1\246\1\164\1\u01c4\1\164\4\u01c4\10\164"+
    "\1\170\11\u01c4\10\164\2\u01c4\12\164\1\u01c6\2\164\1\u01c4"+
    "\1\164\4\u01c4\11\164\11\u01c4\7\164\1\0\2\u01b4\12\0"+
    "\1\u01b5\1\102\1\0\1\u01b4\1\0\4\u01b4\11\0\11\u01b4"+
    "\7\0\1\110\2\u01c7\12\110\1\u01c8\1\175\1\141\1\u01c7"+
    "\1\110\4\u01c7\10\110\1\112\11\u01c7\10\110\2\u01c7\12\110"+
    "\1\u01c8\1\110\1\141\1\u01c7\1\110\4\u01c7\11\110\11\u01c7"+
    "\7\110\1\0\2\u01c9\12\0\1\u01ca\1\160\1\0\1\u01c9"+
    "\1\0\4\u01c9\10\0\1\77\11\u01c9\10\0\2\u01c9\12\0"+
    "\1\u01ca\2\0\1\u01c9\1\0\4\u01c9\11\0\11\u01c9\7\0"+
    "\1\164\2\u01cb\12\164\1\u01cc\1\246\1\164\1\u01cb\1\164"+
    "\4\u01cb\10\164\1\170\11\u01cb\10\164\2\u01cb\12\164\1\u01cd"+
    "\2\164\1\u01cb\1\164\4\u01cb\11\164\11\u01cb\7\164\1\0"+
    "\2\u01bb\12\0\1\u01bc\1\102\1\0\1\u01bb\1\0\4\u01bb"+
    "\11\0\11\u01bb\7\0\1\110\2\u01ce\12\110\1\u01cf\1\175"+
    "\1\141\1\u01ce\1\110\4\u01ce\10\110\1\112\11\u01ce\10\110"+
    "\2\u01ce\12\110\1\u01cf\1\110\1\141\1\u01ce\1\110\4\u01ce"+
    "\11\110\11\u01ce\7\110\1\0\2\u01d0\12\0\1\u01d1\1\160"+
    "\1\0\1\u01d0\1\0\4\u01d0\10\0\1\77\11\u01d0\10\0"+
    "\2\u01d0\12\0\1\u01d1\2\0\1\u01d0\1\0\4\u01d0\11\0"+
    "\11\u01d0\7\0\1\164\2\u01d2\12\164\1\u01d3\1\246\1\164"+
    "\1\u01d2\1\164\4\u01d2\10\164\1\170\11\u01d2\10\164\2\u01d2"+
    "\12\164\1\u01d4\2\164\1\u01d2\1\164\4\u01d2\11\164\11\u01d2"+
    "\7\164\1\0\2\u01c2\12\0\1\u01c3\1\102\1\0\1\u01c2"+
    "\1\0\4\u01c2\11\0\11\u01c2\7\0\1\110\2\u01d5\12\110"+
    "\1\u01d6\1\175\1\141\1\u01d5\1\110\4\u01d5\10\110\1\112"+
    "\11\u01d5\10\110\2\u01d5\12\110\1\u01d6\1\110\1\141\1\u01d5"+
    "\1\110\4\u01d5\11\110\11\u01d5\7\110\1\0\2\u01d7\12\0"+
    "\1\u01d8\1\160\1\0\1\u01d7\1\0\4\u01d7\10\0\1\77"+
    "\11\u01d7\10\0\2\u01d7\12\0\1\u01d8\2\0\1\u01d7\1\0"+
    "\4\u01d7\11\0\11\u01d7\7\0\1\164\2\u01d9\12\164\1\u01da"+
    "\1\246\1\164\1\u01d9\1\164\4\u01d9\10\164\1\170\11\u01d9"+
    "\10\164\2\u01d9\12\164\1\u01db\2\164\1\u01d9\1\164\4\u01d9"+
    "\11\164\11\u01d9\7\164\1\0\2\u01c9\12\0\1\u01ca\1\102"+
    "\1\0\1\u01c9\1\0\4\u01c9\11\0\11\u01c9\7\0\1\110"+
    "\2\u01dc\12\110\1\u01dd\1\175\1\141\1\u01dc\1\110\4\u01dc"+
    "\10\110\1\112\11\u01dc\10\110\2\u01dc\12\110\1\u01dd\1\110"+
    "\1\141\1\u01dc\1\110\4\u01dc\11\110\11\u01dc\7\110\1\0"+
    "\2\u01de\12\0\1\u01df\1\160\1\0\1\u01de\1\0\4\u01de"+
    "\10\0\1\77\11\u01de\10\0\2\u01de\12\0\1\u01df\2\0"+
    "\1\u01de\1\0\4\u01de\11\0\11\u01de\7\0\1\164\2\u01e0"+
    "\12\164\1\u01e1\1\246\1\164\1\u01e0\1\164\4\u01e0\10\164"+
    "\1\170\11\u01e0\10\164\2\u01e0\12\164\1\u01e2\2\164\1\u01e0"+
    "\1\164\4\u01e0\11\164\11\u01e0\7\164\1\0\2\u01d0\12\0"+
    "\1\u01d1\1\102\1\0\1\u01d0\1\0\4\u01d0\11\0\11\u01d0"+
    "\7\0\1\110\2\u01e3\12\110\1\u01e4\1\175\1\141\1\u01e3"+
    "\1\110\4\u01e3\10\110\1\112\11\u01e3\10\110\2\u01e3\12\110"+
    "\1\u01e4\1\110\1\141\1\u01e3\1\110\4\u01e3\11\110\11\u01e3"+
    "\7\110\1\0\2\u01e5\12\0\1\u01e6\1\160\1\0\1\u01e5"+
    "\1\0\4\u01e5\10\0\1\77\11\u01e5\10\0\2\u01e5\12\0"+
    "\1\u01e6\2\0\1\u01e5\1\0\4\u01e5\11\0\11\u01e5\7\0"+
    "\1\164\2\u01e7\12\164\1\u01e8\1\246\1\164\1\u01e7\1\164"+
    "\4\u01e7\10\164\1\170\11\u01e7\10\164\2\u01e7\12\164\1\u01e9"+
    "\2\164\1\u01e7\1\164\4\u01e7\11\164\11\u01e7\7\164\1\0"+
    "\2\u01d7\12\0\1\u01d8\1\102\1\0\1\u01d7\1\0\4\u01d7"+
    "\11\0\11\u01d7\7\0\1\110\2\u01ea\12\110\1\u01eb\1\175"+
    "\1\141\1\u01ea\1\110\4\u01ea\10\110\1\112\11\u01ea\10\110"+
    "\2\u01ea\12\110\1\u01eb\1\110\1\141\1\u01ea\1\110\4\u01ea"+
    "\11\110\11\u01ea\7\110\1\0\2\u01ec\12\0\1\u01ed\1\160"+
    "\1\0\1\u01ec\1\0\4\u01ec\10\0\1\77\11\u01ec\10\0"+
    "\2\u01ec\12\0\1\u01ed\2\0\1\u01ec\1\0\4\u01ec\11\0"+
    "\11\u01ec\7\0\1\164\2\u01ee\12\164\1\u01ef\1\246\1\164"+
    "\1\u01ee\1\164\4\u01ee\10\164\1\170\11\u01ee\10\164\2\u01ee"+
    "\12\164\1\u01f0\2\164\1\u01ee\1\164\4\u01ee\11\164\11\u01ee"+
    "\7\164\1\0\2\u01de\12\0\1\u01df\1\102\1\0\1\u01de"+
    "\1\0\4\u01de\11\0\11\u01de\7\0\1\110\2\u01f1\12\110"+
    "\1\u01f2\1\175\1\141\1\u01f1\1\110\4\u01f1\10\110\1\112"+
    "\11\u01f1\10\110\2\u01f1\12\110\1\u01f2\1\110\1\141\1\u01f1"+
    "\1\110\4\u01f1\11\110\11\u01f1\7\110\1\0\2\u01f3\12\0"+
    "\1\u01f4\1\160\1\0\1\u01f3\1\0\4\u01f3\10\0\1\77"+
    "\11\u01f3\10\0\2\u01f3\12\0\1\u01f4\2\0\1\u01f3\1\0"+
    "\4\u01f3\11\0\11\u01f3\7\0\1\164\2\u01f5\12\164\1\u01f6"+
    "\1\246\1\164\1\u01f5\1\164\4\u01f5\10\164\1\170\11\u01f5"+
    "\10\164\2\u01f5\12\164\1\u01f7\2\164\1\u01f5\1\164\4\u01f5"+
    "\11\164\11\u01f5\7\164\1\0\2\u01e5\12\0\1\u01e6\1\102"+
    "\1\0\1\u01e5\1\0\4\u01e5\11\0\11\u01e5\7\0\1\110"+
    "\2\u01f8\12\110\1\u01f9\1\175\1\141\1\u01f8\1\110\4\u01f8"+
    "\10\110\1\112\11\u01f8\10\110\2\u01f8\12\110\1\u01f9\1\110"+
    "\1\141\1\u01f8\1\110\4\u01f8\11\110\11\u01f8\7\110\1\0"+
    "\2\u01fa\12\0\1\u01fb\1\160\1\0\1\u01fa\1\0\4\u01fa"+
    "\10\0\1\77\11\u01fa\10\0\2\u01fa\12\0\1\u01fb\2\0"+
    "\1\u01fa\1\0\4\u01fa\11\0\11\u01fa\7\0\1\164\2\u01fc"+
    "\12\164\1\u01fd\1\246\1\164\1\u01fc\1\164\4\u01fc\10\164"+
    "\1\170\11\u01fc\10\164\2\u01fc\12\164\1\u01fe\2\164\1\u01fc"+
    "\1\164\4\u01fc\11\164\11\u01fc\7\164\1\0\2\u01ec\12\0"+
    "\1\u01ed\1\102\1\0\1\u01ec\1\0\4\u01ec\11\0\11\u01ec"+
    "\7\0\1\110\2\u01ff\12\110\1\u0200\1\175\1\141\1\u01ff"+
    "\1\110\4\u01ff\10\110\1\112\11\u01ff\10\110\2\u01ff\12\110"+
    "\1\u0200\1\110\1\141\1\u01ff\1\110\4\u01ff\11\110\11\u01ff"+
    "\7\110\1\0\2\u0201\12\0\1\u0202\1\160\1\0\1\u0201"+
    "\1\0\4\u0201\10\0\1\77\11\u0201\10\0\2\u0201\12\0"+
    "\1\u0202\2\0\1\u0201\1\0\4\u0201\11\0\11\u0201\7\0"+
    "\1\164\2\u0203\12\164\1\u0204\1\246\1\164\1\u0203\1\164"+
    "\4\u0203\10\164\1\170\11\u0203\10\164\2\u0203\12\164\1\u0205"+
    "\2\164\1\u0203\1\164\4\u0203\11\164\11\u0203\7\164\1\0"+
    "\2\u01f3\12\0\1\u01f4\1\102\1\0\1\u01f3\1\0\4\u01f3"+
    "\11\0\11\u01f3\7\0\1\110\2\u0206\12\110\1\u0207\1\175"+
    "\1\141\1\u0206\1\110\4\u0206\10\110\1\112\11\u0206\10\110"+
    "\2\u0206\12\110\1\u0207\1\110\1\141\1\u0206\1\110\4\u0206"+
    "\11\110\11\u0206\7\110\1\0\2\u0208\12\0\1\u0209\1\160"+
    "\1\0\1\u0208\1\0\4\u0208\10\0\1\77\11\u0208\10\0"+
    "\2\u0208\12\0\1\u0209\2\0\1\u0208\1\0\4\u0208\11\0"+
    "\11\u0208\7\0\1\164\2\u020a\12\164\1\u020b\1\246\1\164"+
    "\1\u020a\1\164\4\u020a\10\164\1\170\11\u020a\10\164\2\u020a"+
    "\12\164\1\u020c\2\164\1\u020a\1\164\4\u020a\11\164\11\u020a"+
    "\7\164\1\0\2\u01fa\12\0\1\u01fb\1\102\1\0\1\u01fa"+
    "\1\0\4\u01fa\11\0\11\u01fa\7\0\1\110\2\u020d\12\110"+
    "\1\u020e\1\175\1\141\1\u020d\1\110\4\u020d\10\110\1\112"+
    "\11\u020d\10\110\2\u020d\12\110\1\u020e\1\110\1\141\1\u020d"+
    "\1\110\4\u020d\11\110\11\u020d\7\110\1\0\2\u020f\12\0"+
    "\1\u0210\1\160\1\0\1\u020f\1\0\4\u020f\10\0\1\77"+
    "\11\u020f\10\0\2\u020f\12\0\1\u0210\2\0\1\u020f\1\0"+
    "\4\u020f\11\0\11\u020f\7\0\1\164\2\u0211\12\164\1\u0212"+
    "\1\246\1\164\1\u0211\1\164\4\u0211\10\164\1\170\11\u0211"+
    "\10\164\2\u0211\12\164\1\u0213\2\164\1\u0211\1\164\4\u0211"+
    "\11\164\11\u0211\7\164\1\0\2\u0201\12\0\1\u0202\1\102"+
    "\1\0\1\u0201\1\0\4\u0201\11\0\11\u0201\7\0\1\110"+
    "\2\u0214\12\110\1\u0215\1\175\1\141\1\u0214\1\110\4\u0214"+
    "\10\110\1\112\11\u0214\10\110\2\u0214\12\110\1\u0215\1\110"+
    "\1\141\1\u0214\1\110\4\u0214\11\110\11\u0214\7\110\1\0"+
    "\2\u0216\12\0\1\u0217\1\160\1\0\1\u0216\1\0\4\u0216"+
    "\10\0\1\77\11\u0216\10\0\2\u0216\12\0\1\u0217\2\0"+
    "\1\u0216\1\0\4\u0216\11\0\11\u0216\7\0\1\164\2\u0218"+
    "\12\164\1\u0219\1\246\1\164\1\u0218\1\164\4\u0218\10\164"+
    "\1\170\11\u0218\10\164\2\u0218\12\164\1\u021a\2\164\1\u0218"+
    "\1\164\4\u0218\11\164\11\u0218\7\164\1\0\2\u0208\12\0"+
    "\1\u0209\1\102\1\0\1\u0208\1\0\4\u0208\11\0\11\u0208"+
    "\7\0\1\110\2\u021b\12\110\1\u021c\1\175\1\141\1\u021b"+
    "\1\110\4\u021b\10\110\1\112\11\u021b\10\110\2\u021b\12\110"+
    "\1\u021c\1\110\1\141\1\u021b\1\110\4\u021b\11\110\11\u021b"+
    "\7\110\1\0\2\u021d\12\0\1\u021e\1\160\1\0\1\u021d"+
    "\1\0\4\u021d\10\0\1\77\11\u021d\10\0\2\u021d\12\0"+
    "\1\u021e\2\0\1\u021d\1\0\4\u021d\11\0\11\u021d\7\0"+
    "\1\164\2\u021f\12\164\1\u0220\1\246\1\164\1\u021f\1\164"+
    "\4\u021f\10\164\1\170\11\u021f\10\164\2\u021f\12\164\1\u0221"+
    "\2\164\1\u021f\1\164\4\u021f\11\164\11\u021f\7\164\1\0"+
    "\2\u020f\12\0\1\u0210\1\102\1\0\1\u020f\1\0\4\u020f"+
    "\11\0\11\u020f\7\0\1\110\2\u0222\12\110\1\u0223\1\175"+
    "\1\141\1\u0222\1\110\4\u0222\10\110\1\112\11\u0222\10\110"+
    "\2\u0222\12\110\1\u0223\1\110\1\141\1\u0222\1\110\4\u0222"+
    "\11\110\11\u0222\7\110\1\0\2\u0224\12\0\1\u0225\1\160"+
    "\1\0\1\u0224\1\0\4\u0224\10\0\1\77\11\u0224\10\0"+
    "\2\u0224\12\0\1\u0225\2\0\1\u0224\1\0\4\u0224\11\0"+
    "\11\u0224\7\0\1\164\2\u0226\12\164\1\u0227\1\246\1\164"+
    "\1\u0226\1\164\4\u0226\10\164\1\170\11\u0226\10\164\2\u0226"+
    "\12\164\1\u0228\2\164\1\u0226\1\164\4\u0226\11\164\11\u0226"+
    "\7\164\1\0\2\u0216\12\0\1\u0217\1\102\1\0\1\u0216"+
    "\1\0\4\u0216\11\0\11\u0216\7\0\1\110\2\u0229\12\110"+
    "\1\u022a\1\175\1\141\1\u0229\1\110\4\u0229\10\110\1\112"+
    "\11\u0229\10\110\2\u0229\12\110\1\u022a\1\110\1\141\1\u0229"+
    "\1\110\4\u0229\11\110\11\u0229\7\110\1\0\2\u022b\12\0"+
    "\1\u022c\1\160\1\0\1\u022b\1\0\4\u022b\10\0\1\77"+
    "\11\u022b\10\0\2\u022b\12\0\1\u022c\2\0\1\u022b\1\0"+
    "\4\u022b\11\0\11\u022b\7\0\1\164\2\u022d\12\164\1\u022e"+
    "\1\246\1\164\1\u022d\1\164\4\u022d\10\164\1\170\11\u022d"+
    "\10\164\2\u022d\12\164\1\u022f\2\164\1\u022d\1\164\4\u022d"+
    "\11\164\11\u022d\7\164\1\0\2\u021d\12\0\1\u021e\1\102"+
    "\1\0\1\u021d\1\0\4\u021d\11\0\11\u021d\7\0\1\110"+
    "\2\u0230\12\110\1\u0231\1\175\1\141\1\u0230\1\110\4\u0230"+
    "\10\110\1\112\11\u0230\10\110\2\u0230\12\110\1\u0231\1\110"+
    "\1\141\1\u0230\1\110\4\u0230\11\110\11\u0230\7\110\1\0"+
    "\2\u0232\12\0\1\u0233\1\160\1\0\1\u0232\1\0\4\u0232"+
    "\10\0\1\77\11\u0232\10\0\2\u0232\12\0\1\u0233\2\0"+
    "\1\u0232\1\0\4\u0232\11\0\11\u0232\7\0\1\164\2\u0234"+
    "\12\164\1\u0235\1\246\1\164\1\u0234\1\164\4\u0234\10\164"+
    "\1\170\11\u0234\10\164\2\u0234\12\164\1\u0236\2\164\1\u0234"+
    "\1\164\4\u0234\11\164\11\u0234\7\164\1\0\2\u0224\12\0"+
    "\1\u0225\1\102\1\0\1\u0224\1\0\4\u0224\11\0\11\u0224"+
    "\7\0\1\110\2\u0237\12\110\1\u0238\1\175\1\141\1\u0237"+
    "\1\110\4\u0237\10\110\1\112\11\u0237\10\110\2\u0237\12\110"+
    "\1\u0238\1\110\1\141\1\u0237\1\110\4\u0237\11\110\11\u0237"+
    "\7\110\1\0\2\u0239\12\0\1\u023a\1\160\1\0\1\u0239"+
    "\1\0\4\u0239\10\0\1\77\11\u0239\10\0\2\u0239\12\0"+
    "\1\u023a\2\0\1\u0239\1\0\4\u0239\11\0\11\u0239\7\0"+
    "\1\164\2\u023b\12\164\1\u023c\1\246\1\164\1\u023b\1\164"+
    "\4\u023b\10\164\1\170\11\u023b\10\164\2\u023b\12\164\1\u023d"+
    "\2\164\1\u023b\1\164\4\u023b\11\164\11\u023b\7\164\1\0"+
    "\2\u022b\12\0\1\u022c\1\102\1\0\1\u022b\1\0\4\u022b"+
    "\11\0\11\u022b\7\0\1\110\2\u023e\12\110\1\u023f\1\175"+
    "\1\141\1\u023e\1\110\4\u023e\10\110\1\112\11\u023e\10\110"+
    "\2\u023e\12\110\1\u023f\1\110\1\141\1\u023e\1\110\4\u023e"+
    "\11\110\11\u023e\7\110\1\0\2\u0240\12\0\1\u0241\1\160"+
    "\1\0\1\u0240\1\0\4\u0240\10\0\1\77\11\u0240\10\0"+
    "\2\u0240\12\0\1\u0241\2\0\1\u0240\1\0\4\u0240\11\0"+
    "\11\u0240\7\0\1\164\2\u0242\12\164\1\u0243\1\246\1\164"+
    "\1\u0242\1\164\4\u0242\10\164\1\170\11\u0242\10\164\2\u0242"+
    "\12\164\1\u0244\2\164\1\u0242\1\164\4\u0242\11\164\11\u0242"+
    "\7\164\1\0\2\u0232\12\0\1\u0233\1\102\1\0\1\u0232"+
    "\1\0\4\u0232\11\0\11\u0232\7\0\1\110\2\u0245\12\110"+
    "\1\u0246\1\175\1\141\1\u0245\1\110\4\u0245\10\110\1\112"+
    "\11\u0245\10\110\2\u0245\12\110\1\u0246\1\110\1\141\1\u0245"+
    "\1\110\4\u0245\11\110\11\u0245\7\110\1\0\2\u0247\12\0"+
    "\1\u0248\1\160\1\0\1\u0247\1\0\4\u0247\10\0\1\77"+
    "\11\u0247\10\0\2\u0247\12\0\1\u0248\2\0\1\u0247\1\0"+
    "\4\u0247\11\0\11\u0247\7\0\1\164\2\u0249\12\164\1\u024a"+
    "\1\246\1\164\1\u0249\1\164\4\u0249\10\164\1\170\11\u0249"+
    "\10\164\2\u0249\12\164\1\u024b\2\164\1\u0249\1\164\4\u0249"+
    "\11\164\11\u0249\7\164\1\0\2\u0239\12\0\1\u023a\1\102"+
    "\1\0\1\u0239\1\0\4\u0239\11\0\11\u0239\7\0\1\110"+
    "\2\u024c\12\110\1\u024d\1\175\1\141\1\u024c\1\110\4\u024c"+
    "\10\110\1\112\11\u024c\10\110\2\u024c\12\110\1\u024d\1\110"+
    "\1\141\1\u024c\1\110\4\u024c\11\110\11\u024c\7\110\1\0"+
    "\2\u024e\12\0\1\u024f\1\160\1\0\1\u024e\1\0\4\u024e"+
    "\10\0\1\77\11\u024e\10\0\2\u024e\12\0\1\u024f\2\0"+
    "\1\u024e\1\0\4\u024e\11\0\11\u024e\7\0\1\164\2\u0250"+
    "\12\164\1\u0251\1\246\1\164\1\u0250\1\164\4\u0250\10\164"+
    "\1\170\11\u0250\10\164\2\u0250\12\164\1\u0252\2\164\1\u0250"+
    "\1\164\4\u0250\11\164\11\u0250\7\164\1\0\2\u0240\12\0"+
    "\1\u0241\1\102\1\0\1\u0240\1\0\4\u0240\11\0\11\u0240"+
    "\7\0\1\110\2\u0253\12\110\1\u0254\1\175\1\141\1\u0253"+
    "\1\110\4\u0253\10\110\1\112\11\u0253\10\110\2\u0253\12\110"+
    "\1\u0254\1\110\1\141\1\u0253\1\110\4\u0253\11\110\11\u0253"+
    "\7\110\1\0\2\u0255\12\0\1\u0256\1\160\1\0\1\u0255"+
    "\1\0\4\u0255\10\0\1\77\11\u0255\10\0\2\u0255\12\0"+
    "\1\u0256\2\0\1\u0255\1\0\4\u0255\11\0\11\u0255\7\0"+
    "\1\164\2\u0257\12\164\1\u0258\1\246\1\164\1\u0257\1\164"+
    "\4\u0257\10\164\1\170\11\u0257\10\164\2\u0257\12\164\1\u0259"+
    "\2\164\1\u0257\1\164\4\u0257\11\164\11\u0257\7\164\1\0"+
    "\2\u0247\12\0\1\u0248\1\102\1\0\1\u0247\1\0\4\u0247"+
    "\11\0\11\u0247\7\0\1\110\2\u025a\12\110\1\u025b\1\175"+
    "\1\141\1\u025a\1\110\4\u025a\10\110\1\112\11\u025a\10\110"+
    "\2\u025a\12\110\1\u025b\1\110\1\141\1\u025a\1\110\4\u025a"+
    "\11\110\11\u025a\7\110\1\0\2\u025c\12\0\1\u025d\1\160"+
    "\1\0\1\u025c\1\0\4\u025c\10\0\1\77\11\u025c\10\0"+
    "\2\u025c\12\0\1\u025d\2\0\1\u025c\1\0\4\u025c\11\0"+
    "\11\u025c\7\0\1\164\2\u025e\12\164\1\u025f\1\246\1\164"+
    "\1\u025e\1\164\4\u025e\10\164\1\170\11\u025e\10\164\2\u025e"+
    "\12\164\1\u0260\2\164\1\u025e\1\164\4\u025e\11\164\11\u025e"+
    "\7\164\1\0\2\u024e\12\0\1\u024f\1\102\1\0\1\u024e"+
    "\1\0\4\u024e\11\0\11\u024e\7\0\1\110\2\u0261\12\110"+
    "\1\u0262\1\175\1\141\1\u0261\1\110\4\u0261\10\110\1\112"+
    "\11\u0261\10\110\2\u0261\12\110\1\u0262\1\110\1\141\1\u0261"+
    "\1\110\4\u0261\11\110\11\u0261\7\110\1\0\2\u0263\12\0"+
    "\1\u0264\1\160\1\0\1\u0263\1\0\4\u0263\10\0\1\77"+
    "\11\u0263\10\0\2\u0263\12\0\1\u0264\2\0\1\u0263\1\0"+
    "\4\u0263\11\0\11\u0263\7\0\1\164\2\u0265\12\164\1\u0266"+
    "\1\246\1\164\1\u0265\1\164\4\u0265\10\164\1\170\11\u0265"+
    "\10\164\2\u0265\12\164\1\u0267\2\164\1\u0265\1\164\4\u0265"+
    "\11\164\11\u0265\7\164\1\0\2\u0255\12\0\1\u0256\1\102"+
    "\1\0\1\u0255\1\0\4\u0255\11\0\11\u0255\7\0\1\110"+
    "\2\u0268\12\110\1\u0269\1\175\1\141\1\u0268\1\110\4\u0268"+
    "\10\110\1\112\11\u0268\10\110\2\u0268\12\110\1\u0269\1\110"+
    "\1\141\1\u0268\1\110\4\u0268\11\110\11\u0268\7\110\1\0"+
    "\2\u026a\12\0\1\u026b\1\160\1\0\1\u026a\1\0\4\u026a"+
    "\10\0\1\77\11\u026a\10\0\2\u026a\12\0\1\u026b\2\0"+
    "\1\u026a\1\0\4\u026a\11\0\11\u026a\7\0\1\164\2\u026c"+
    "\12\164\1\u026d\1\246\1\164\1\u026c\1\164\4\u026c\10\164"+
    "\1\170\11\u026c\10\164\2\u026c\12\164\1\u026e\2\164\1\u026c"+
    "\1\164\4\u026c\11\164\11\u026c\7\164\1\0\2\u025c\12\0"+
    "\1\u025d\1\102\1\0\1\u025c\1\0\4\u025c\11\0\11\u025c"+
    "\7\0\1\110\2\u026f\12\110\1\u0270\1\175\1\141\1\u026f"+
    "\1\110\4\u026f\10\110\1\112\11\u026f\10\110\2\u026f\12\110"+
    "\1\u0270\1\110\1\141\1\u026f\1\110\4\u026f\11\110\11\u026f"+
    "\7\110\1\0\2\u0271\12\0\1\u0272\1\160\1\0\1\u0271"+
    "\1\0\4\u0271\10\0\1\77\11\u0271\10\0\2\u0271\12\0"+
    "\1\u0272\2\0\1\u0271\1\0\4\u0271\11\0\11\u0271\7\0"+
    "\1\164\2\u0273\12\164\1\u0274\1\246\1\164\1\u0273\1\164"+
    "\4\u0273\10\164\1\170\11\u0273\10\164\2\u0273\12\164\1\u0275"+
    "\2\164\1\u0273\1\164\4\u0273\11\164\11\u0273\7\164\1\0"+
    "\2\u0263\12\0\1\u0264\1\102\1\0\1\u0263\1\0\4\u0263"+
    "\11\0\11\u0263\7\0\1\110\2\u0276\12\110\1\u0277\1\175"+
    "\1\141\1\u0276\1\110\4\u0276\10\110\1\112\11\u0276\10\110"+
    "\2\u0276\12\110\1\u0277\1\110\1\141\1\u0276\1\110\4\u0276"+
    "\11\110\11\u0276\7\110\1\0\2\u0278\13\0\1\160\1\0"+
    "\1\u0278\1\0\4\u0278\10\0\1\77\11\u0278\10\0\2\u0278"+
    "\15\0\1\u0278\1\0\4\u0278\11\0\11\u0278\7\0\1\164"+
    "\2\u0279\12\164\1\u027a\1\246\1\164\1\u0279\1\164\4\u0279"+
    "\10\164\1\170\11\u0279\10\164\2\u0279\12\164\1\u027b\2\164"+
    "\1\u0279\1\164\4\u0279\11\164\11\u0279\7\164\1\0\2\u026a"+
    "\12\0\1\u026b\1\102\1\0\1\u026a\1\0\4\u026a\11\0"+
    "\11\u026a\7\0\1\110\2\u027c\13\110\1\175\1\141\1\u027c"+
    "\1\110\4\u027c\10\110\1\112\11\u027c\10\110\2\u027c\14\110"+
    "\1\141\1\u027c\1\110\4\u027c\11\110\11\u027c\7\110\16\0"+
    "\1\160\17\0\1\77\20\0\1\164\2\u027d\12\164\1\u027e"+
    "\1\246\1\164\1\u027d\1\164\4\u027d\10\164\1\170\11\u027d"+
    "\10\164\2\u027d\12\164\1\u027f\2\164\1\u027d\1\164\4\u027d"+
    "\11\164\11\u027d\7\164\1\0\2\u0271\12\0\1\u0272\1\102"+
    "\1\0\1\u0271\1\0\4\u0271\11\0\11\u0271\7\0\16\110"+
    "\1\175\1\141\16\110\1\112\20\110\1\164\2\u0280\12\164"+
    "\1\215\1\246\1\164\1\u0280\1\164\4\u0280\10\164\1\170"+
    "\11\u0280\10\164\2\u0280\12\164\1\134\2\164\1\u0280\1\164"+
    "\4\u0280\11\164\11\u0280\7\164\1\0\2\u0278\13\0\1\102"+
    "\1\0\1\u0278\1\0\4\u0278\11\0\11\u0278\7\0\15\164"+
    "\1\215\1\246\17\164\1\170\20\164";

  private static int [] zzUnpackTrans() {
    int [] result = new int[28435];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\6\0\1\11\2\1\2\11\3\1\1\11\2\1\3\11"+
    "\4\1\2\11\5\1\2\0\1\1\3\0\1\11\1\1"+
    "\1\11\1\1\5\0\4\1\7\0\5\1\3\0\1\11"+
    "\11\0\4\1\5\0\5\1\12\0\1\1\5\0\4\1"+
    "\2\0\1\11\2\0\1\11\3\0\1\1\5\0\1\1"+
    "\7\0\1\1\15\0\1\1\2\0\1\1\1\11\16\0"+
    "\1\1\11\0\2\1\2\0\1\1\1\11\12\0\2\1"+
    "\12\0\1\1\2\0\1\1\7\0\2\1\65\0\1\1"+
    "\u0172\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[640];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /** For the backwards DFA of general lookahead statements */
  private boolean [] zzFin = new boolean [ZZ_BUFFERSIZE+1];

  /* user code: */
  private static class Token extends MarkdownTokenTypes {}

  private Stack<Integer> stateStack = new Stack<Integer>();

  private boolean isHeader = false;

  private ParseDelimited parseDelimited = new ParseDelimited();

  private static class ParseDelimited {
    char exitChar = 0;
    IElementType returnType = null;
    boolean inlinesAllowed = true;
  }

  private static class LinkDef {
    boolean wasUrl;
    boolean wasParen;
  }

  private static class HtmlHelper {
    private static final String BLOCK_TAGS_STRING =
            "article, header, aside, hgroup, blockquote, hr, iframe, body, li, map, button, " +
            "object, canvas, ol, caption, output, col, p, colgroup, pre, dd, progress, div, " +
            "section, dl, table, td, dt, tbody, embed, textarea, fieldset, tfoot, figcaption, " +
            "th, figure, thead, footer, footer, tr, form, ul, h1, h2, h3, h4, h5, h6, video, " +
            "script, style";

    static final Set<String> BLOCK_TAGS = getBlockTagsSet();

    private static Set<String> getBlockTagsSet() {
      Set<String> result = new HashSet<String>();
      String[] tags = BLOCK_TAGS_STRING.split(", ");
      for (String tag : tags) {
        result.add(tag);
      }
      return result;
    }
  }

  private static IElementType getDelimiterTokenType(char c) {
    switch (c) {
      case '"': return Token.DOUBLE_QUOTE;
      case '\'': return Token.SINGLE_QUOTE;
      case '(': return Token.LPAREN;
      case ')': return Token.RPAREN;
      case '[': return Token.LBRACKET;
      case ']': return Token.RBRACKET;
      case '<': return Token.LT;
      case '>': return Token.GT;
      default: return Token.BAD_CHARACTER;
    }
  }

  private IElementType parseDelimited(IElementType contentsType, boolean allowInlines) {
    char first = yycharat(0);
    char last = yycharat(yylength() - 1);

    stateStack.push(yystate());

    parseDelimited.exitChar = last;
    parseDelimited.returnType = contentsType;
//    parseDelimited.inlinesAllowed = allowInlines;
    parseDelimited.inlinesAllowed = true;

    yybegin(PARSE_DELIMITED);

    yypushback(yylength() - 1);
    return getDelimiterTokenType(first);
  }

  private void processEol() {
    int newlinePos = 1;
    while (newlinePos < yylength() && yycharat(newlinePos) != '\n') {
      newlinePos++;
    }

    // there is always one at 0 so that means there are two at least
    if (newlinePos != yylength()) {
      yypushback(yylength() - newlinePos);
      return;
    }

    yybegin(YYINITIAL);
    yypushback(yylength() - 1);

    isHeader = false;
  }

  private void popState() {
    if (stateStack.isEmpty()) {
      yybegin(AFTER_LINE_START);
    }
    else {
      yybegin(stateStack.pop());
    }
  }

  private void resetState() {
    yypushback(yylength());

    popState();
  }

  private String getTagName() {
    if (yylength() > 1 && yycharat(1) == '/') {
      return yytext().toString().substring(2, yylength() - 1).trim();
    }
    return yytext().toString().substring(1);
  }

  private boolean isBlockTag(String tagName) {
    return HtmlHelper.BLOCK_TAGS.contains(tagName.toLowerCase());
  }

  private boolean canInline() {
    return yystate() == AFTER_LINE_START || yystate() == PARSE_DELIMITED && parseDelimited.inlinesAllowed;
  }

  private IElementType getReturnGeneralized(IElementType defaultType) {
    if (canInline()) {
      return defaultType;
    }
    return parseDelimited.returnType;
  }

  private int countChars(CharSequence s, char c) {
    int result = 0;
    for (int i = 0; i < s.length(); ++i) {
      if (s.charAt(i) == c)
        result++;
    }
    return result;
  }



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _GFMLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { resetState();
            } 
            // fall through
          case 21: break;
          case 2: 
            { return Token.BLOCK_QUOTE;
            } 
            // fall through
          case 22: break;
          case 3: 
            { return Token.TEXT;
            } 
            // fall through
          case 23: break;
          case 4: 
            { return Token.WHITE_SPACE;
            } 
            // fall through
          case 24: break;
          case 5: 
            { int lastSpaces = yytext().toString().indexOf("\n");
    if (lastSpaces >= 2) {
      yypushback(yylength() - lastSpaces);
      return Token.HARD_LINE_BREAK;
    }
    else if (lastSpaces > 0) {
      yypushback(yylength() - lastSpaces);
      return Token.WHITE_SPACE;
    }

    processEol();
    return Token.EOL;
            } 
            // fall through
          case 25: break;
          case 6: 
            { return getDelimiterTokenType(yycharat(0));
            } 
            // fall through
          case 26: break;
          case 7: 
            { return Token.EXCLAMATION_MARK;
            } 
            // fall through
          case 27: break;
          case 8: 
            { return Token.COLON;
            } 
            // fall through
          case 28: break;
          case 9: 
            { return getReturnGeneralized(Token.EMPH);
            } 
            // fall through
          case 29: break;
          case 10: 
            { if (canInline()) {
      return Token.BACKTICK;
    }
    return parseDelimited.returnType;
            } 
            // fall through
          case 30: break;
          case 11: 
            { return getReturnGeneralized(GFMTokenTypes.TILDE);
            } 
            // fall through
          case 31: break;
          case 12: 
            { if (yycharat(0) == parseDelimited.exitChar) {
      yybegin(stateStack.pop());
      return getDelimiterTokenType(yycharat(0));
    }
    return parseDelimited.returnType;
            } 
            // fall through
          case 32: break;
          case 13: 
            // lookahead expression with fixed base length
            zzMarkedPos = Character.offsetByCodePoints
                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzStartRead, 1);
            { return Token.HARD_LINE_BREAK;
            } 
            // fall through
          case 33: break;
          case 14: 
            { return getReturnGeneralized(Token.TEXT);
            } 
            // fall through
          case 34: break;
          case 15: 
            { return getReturnGeneralized(Token.ESCAPED_BACKTICKS);
            } 
            // fall through
          case 35: break;
          case 16: 
            { return Token.HTML_TAG;
            } 
            // fall through
          case 36: break;
          case 17: 
            { return parseDelimited(Token.EMAIL_AUTOLINK, false);
            } 
            // fall through
          case 37: break;
          case 18: 
            { return parseDelimited(Token.AUTOLINK, false);
            } 
            // fall through
          case 38: break;
          case 19: 
            { return GFMTokenTypes.GFM_AUTOLINK;
            } 
            // fall through
          case 39: break;
          case 20: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 4;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length()) { zzFin = new boolean[zzBufferL.length()+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos/*, zzMarkedPos*/);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + ZZ_CMAP(zzInput) ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 5;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos/*, zzStartRead*/);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + ZZ_CMAP(zzInput) ];
              };
              zzMarkedPos = zzFPos;
            }
            { return Token.TEXT;
            } 
            // fall through
          case 40: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
